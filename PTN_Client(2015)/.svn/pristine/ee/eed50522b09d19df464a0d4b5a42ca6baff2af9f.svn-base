package com.nms.db.dao.ptn.path;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;

import com.nms.db.bean.ptn.path.StaticUnicastInfo;
import com.nms.ui.manager.ExceptionManage;

public class SingelSpreadDao {
	public int insert(StaticUnicastInfo staticUnicastInfo, Connection connection) throws Exception {
		
		if (null == staticUnicastInfo) {
			throw new Exception("staticUnicastInfo is null");
		}

		if (null == connection) {
			throw new Exception("connection is null");
		}

		String sql = null;
		PreparedStatement preparedStatement = null;
		int result = 0;
		ResultSet resultSet = null;
		try {
			sql = "insert into single_spread(suId,vsId,singlePortChoose,macAddress,siteId) values(?,?,?,?,?)";
			preparedStatement = connection.prepareStatement(sql,Statement.RETURN_GENERATED_KEYS);
			preparedStatement.setInt(1, staticUnicastInfo.getSuId());
			preparedStatement.setInt(2, staticUnicastInfo.getVplsVs());
			preparedStatement.setInt(3, staticUnicastInfo.getPortChoice());
			preparedStatement.setString(4, staticUnicastInfo.getMacAddress());
			preparedStatement.setInt(5, staticUnicastInfo.getSiteId());
			preparedStatement.executeUpdate();
			resultSet = preparedStatement.getGeneratedKeys();
			if (resultSet.next()) {
				result = resultSet.getInt(1);
			}
		} catch (Exception e) {
			throw e;
		} finally {
			if(null!=resultSet){
				try {
					resultSet.close();
				} catch (Exception e) {
					ExceptionManage.dispose(e,this.getClass());
				}
				resultSet = null;
			}
			if (preparedStatement != null) {
				try {
					preparedStatement.close();
				} catch (Exception e) {
					ExceptionManage.dispose(e,this.getClass());
				}
				preparedStatement = null;
			}

			sql = null;
		}

		return result;
	}
	
	
	public int update(StaticUnicastInfo staticUnicastInfo, Connection connection) throws Exception {
		if (null == staticUnicastInfo) {
			throw new Exception("staticUnicastInfo is null");
		}

		if (null == connection) {
			throw new Exception("connection is null");
		}

		String sql = null;
		PreparedStatement preparedStatement = null;
		int result = 0;

		try {
			sql = "update single_spread set vsId=?,singlePortChoose=?,macAddress=? ,siteId=? where suId=?";
			
			preparedStatement = connection.prepareStatement(sql);
			preparedStatement = connection.prepareStatement(sql,Statement.RETURN_GENERATED_KEYS);
			
			preparedStatement.setInt(1, staticUnicastInfo.getVplsVs());
			preparedStatement.setInt(2, staticUnicastInfo.getPortChoice());
			preparedStatement.setString(3, staticUnicastInfo.getMacAddress());
			preparedStatement.setInt(4, staticUnicastInfo.getSiteId());
			preparedStatement.setInt(5, staticUnicastInfo.getSuId());
			result = preparedStatement.executeUpdate();

		} catch (Exception e) {
			throw e;
		} finally {

			if (preparedStatement != null) {
				try {
					preparedStatement.close();
				} catch (Exception e) {
					throw e;
				}
				preparedStatement = null;
			}
			sql = null;
		}

		return result;
	}
	
	
	public int delete(int id, Connection connection) throws Exception {
		if (null == connection) {
			throw new Exception("connection is null");
		}

		String sql = null;
		PreparedStatement preparedStatement = null;
		int result = 0;

		try {
			sql = "delete from single_spread where id=?";
			preparedStatement = connection.prepareStatement(sql);
			preparedStatement.setInt(1, id);

			result = preparedStatement.executeUpdate();

		} catch (Exception e) {
			throw e;
		} finally {

			if (preparedStatement != null) {
				try {
					preparedStatement.close();
				} catch (Exception e) {
					throw e;
				}
				preparedStatement = null;
			}
			sql = null;
		}

		return result;
	}
	public List<StaticUnicastInfo> queryByCondition(StaticUnicastInfo condi,
			Connection connection) throws Exception {
		if(connection == null){
			throw new Exception("Connection is null");
		}
		List<StaticUnicastInfo> staticUnicastInfoList = null;
		String sql = null;
		ResultSet resultSet = null;
		PreparedStatement preparedStatement = null;
		StaticUnicastInfo info = null;
		List<Object> filterCondition = new ArrayList<Object>();
		try{
			staticUnicastInfoList = new ArrayList<StaticUnicastInfo>();
			sql = "SELECT * FROM `single_spread` WHERE siteId=?";
			
			if(condi.getSuId()>0)
			{
				sql += " and suId=?";
				filterCondition.add(condi.getSuId());
			}
			
			preparedStatement =  connection.prepareStatement(sql);
			preparedStatement.setInt(1, condi.getSiteId());
			
			if (filterCondition.size() > 0) {
				for (int i = 0; i < filterCondition.size(); i++) {
					preparedStatement.setObject(i + 2, filterCondition.get(i));
				}
			}
			
			resultSet  = preparedStatement.executeQuery();
			while(resultSet.next()){
				info = new StaticUnicastInfo();
				info.setId(resultSet.getInt("Id"));
				info.setSiteId(resultSet.getInt("siteId"));
				info.setSuId(resultSet.getInt("suId"));
				info.setVplsVs(resultSet.getInt("vsId"));
				info.setPortChoice(resultSet.getInt("singlePortChoose"));	
				info.setMacAddress(resultSet.getString("macAddress"));
				staticUnicastInfoList.add(info);
			}
		}catch(Exception e){
			throw e;
		}finally{
			if(resultSet != null){
				try {
					resultSet.close();
				} catch (Exception e) {
					throw e;
				}
				resultSet = null;
			}
			if(preparedStatement != null){
				try {
					preparedStatement.close();
				} catch (Exception e) {
					throw e;
				}
				preparedStatement = null;
			}
			sql = null;
			info = null;
		}
		return staticUnicastInfoList;
	}

	public List<StaticUnicastInfo> queryByCondition(int siteId,
			Connection connection) throws Exception {
		if(connection == null){
			throw new Exception("Connection is null");
		}
		List<StaticUnicastInfo> staticUnicastInfoList = null;
		String sql = null;
		ResultSet resultSet = null;
		PreparedStatement preparedStatement = null;
		StaticUnicastInfo info = null;
		
		try{
			staticUnicastInfoList = new ArrayList<StaticUnicastInfo>();
			sql = "SELECT * FROM `single_spread` WHERE siteId=?";
			preparedStatement =  connection.prepareStatement(sql);
			preparedStatement.setInt(1, siteId);
			resultSet  = preparedStatement.executeQuery();
			while(resultSet.next()){
				info = new StaticUnicastInfo();
				info.setId(resultSet.getInt("Id"));
				info.setSiteId(resultSet.getInt("siteId"));
				info.setSuId(resultSet.getInt("suId"));
				info.setVplsVs(resultSet.getInt("vsId"));
				info.setPortChoice(resultSet.getInt("singlePortChoose"));	
				info.setMacAddress(resultSet.getString("macAddress"));
				staticUnicastInfoList.add(info);
			}
		}catch(Exception e){
			throw e;
		}finally{
			if(resultSet != null){
				try {
					resultSet.close();
				} catch (Exception e) {
					throw e;
				}
				resultSet = null;
			}
			if(preparedStatement != null){
				try {
					preparedStatement.close();
				} catch (Exception e) {
					throw e;
				}
				preparedStatement = null;
			}
			sql = null;
			info = null;
		}
		return staticUnicastInfoList;
	}
	
	public List<Integer> querySuId(int siteId, Connection connection) throws Exception
	{
		if (null == connection) 
		{
			throw new Exception("connection is null");
		}

		String sql = null;
		PreparedStatement preparedStatement = null;
		ResultSet resultSet = null;
        List<Integer> idList = new ArrayList<Integer>();
		try {
			sql = "select suId from single_spread where siteId=?";
			preparedStatement = connection.prepareStatement(sql);
			preparedStatement.setInt(1, siteId);

			resultSet = preparedStatement.executeQuery();
			while(resultSet.next()){
				idList.add(resultSet.getInt("suId"));
			}

		} catch (Exception e) {
			throw e;
		} finally {

			if (preparedStatement != null) {
				try {
					preparedStatement.close();
				} catch (Exception e) {
					throw e;
				}
				preparedStatement = null;
			}
			sql = null;
		}

		return idList;
	}
	
	
	public List<StaticUnicastInfo> selectByStaticUniInfo(StaticUnicastInfo infos, Connection connection) throws Exception
	{
		if (null == connection) 
		{
			throw new Exception("connection is null");
		}

		String sql = null;
		PreparedStatement preparedStatement = null;
		ResultSet resultSet = null;
        List<StaticUnicastInfo> staticUniList = new ArrayList<StaticUnicastInfo>();
        StaticUnicastInfo info = null;
		try {
			sql = "select * from single_spread where siteId=? and vsId=?";
			preparedStatement = connection.prepareStatement(sql);
			preparedStatement.setInt(1, infos.getSiteId());
			preparedStatement.setInt(2, infos.getVplsVs());
			resultSet = preparedStatement.executeQuery();
			while(resultSet.next()){
				info = new StaticUnicastInfo();
				info.setId(resultSet.getInt("id"));
				info.setSiteId(resultSet.getInt("siteId"));
				info.setSuId(resultSet.getInt("suId"));
				info.setVplsVs(resultSet.getInt("vsId"));
				info.setPortChoice(resultSet.getInt("singlePortChoose"));	
				info.setMacAddress(resultSet.getString("macAddress"));
				staticUniList.add(info);
			}

		} catch (Exception e) {
			throw e;
		} finally {

			if (preparedStatement != null) {
				try {
					preparedStatement.close();
				} catch (Exception e) {
					throw e;
				}
				preparedStatement = null;
			}
			sql = null;
			info = null;
		}

		return staticUniList;
	}
}
