package com.nms.model.ptn.clock;

import java.sql.Connection;
import java.util.ArrayList;
import java.util.List;

import com.nms.db.bean.ptn.clock.FrequencyInfoNeClock;
import com.nms.db.dao.ptn.clock.FrequencyInfoNeClockDao;
import com.nms.model.util.ObjectService;
import com.nms.ui.manager.ExceptionManage;
import com.nms.util.DBManager;
/**
 * 
 * @author zhangkun
 *
 */
public class FrequencyInfoNeClockService extends ObjectService {
	public void setConnection(Connection connection) {
		super.connection = connection;
	}

	public void setPtnuser(String prnuser) {
		super.ptnuser = prnuser;
	}

	private FrequencyInfoNeClockDao frequencyInfo_neClockDao = new FrequencyInfoNeClockDao();

	/**
	 *添加数据
	 *
	 * @param frequencyInfo_neClock 实体
	 * @return 只要不是0就是插入成功
	 * @throws Exception
	 */
	public int insertFrequencyInfo_neClock(FrequencyInfoNeClock frequencyInfo_neClock) throws Exception {
		if (null == frequencyInfo_neClock) {
			throw new Exception("frequencyInfo_neClock is null");
		}
		int information = 0;
		try {
			connection.setAutoCommit(false);
			information = frequencyInfo_neClockDao.insert(frequencyInfo_neClock, connection);
			if(!connection.getAutoCommit()){
				connection.commit();
			}
		} catch (Exception e) {
			connection.rollback();
			ExceptionManage.dispose(e,this.getClass());
		} finally {
			connection.setAutoCommit(true);
		}
		return information;
	}

	/**
	 * function:删除相关联数据
	 * 
	 * @param frequencyInfo_neClock
	 *            实体
	 * @return
	 * @throws Exception
	 */
	public int delete(FrequencyInfoNeClock frequencyInfo_neClock)
			throws Exception {
		if (null == frequencyInfo_neClock) {
			throw new Exception("frequencyInfo_neClock is null");
		}
		int information = 0;
		try {
			connection.setAutoCommit(false);
			information = frequencyInfo_neClockDao.delete(frequencyInfo_neClock, connection);
			if(!connection.getAutoCommit()){
				connection.commit();
			}
		} catch (Exception e) {
			connection.rollback();
			ExceptionManage.dispose(e,this.getClass());
		} finally {
			connection.setAutoCommit(true);
		}
		return information;
	}

	/**
	 * 查询相关信息
	 * 
	 * @return List<FrequencyInfo_neClock>
	 * @throws Exception
	 */

	public FrequencyInfoNeClock select(int id) throws Exception {
		FrequencyInfoNeClock FrequencyInfo_neClockList = null;
		try {
			FrequencyInfo_neClockList = new FrequencyInfoNeClock();
			FrequencyInfo_neClockList = frequencyInfo_neClockDao.select(connection,id);
		} catch (Exception e) {
			ExceptionManage.dispose(e,this.getClass());
		}
		return FrequencyInfo_neClockList;
	}

	/**
	 * 删除相关的数据
	 * 
	 * @param frequencyInfo_neClock
	 *            实体
	 * @return int 1:成功，0不成功
	 * @throws Exception
	 */
	public int update(FrequencyInfoNeClock frequencyInfo_neClock)throws Exception {
		if (null == frequencyInfo_neClock) {
			throw new Exception("frequencyInfo_neClock is null");
		}
		int isOK = 0;
		try {
			connection.setAutoCommit(false);
			isOK = frequencyInfo_neClockDao.update(frequencyInfo_neClock,connection);
			if(!connection.getAutoCommit()){
				connection.commit();
			}
		} catch (Exception e) {
			connection.rollback();
			ExceptionManage.dispose(e,this.getClass());
		} finally {
			connection.setAutoCommit(true);
		}
		return isOK;
	}

	public static void main(String[] args) throws Exception {
    Connection con=DBManager.getInstance().getConnection();
    FrequencyInfoNeClockService cc=new FrequencyInfoNeClockService();
    cc.setConnection(con);
    FrequencyInfoNeClock frequencyInfo_neClock=new FrequencyInfoNeClock();
//    frequencyInfo_neClock.setSiteId(12);
//    frequencyInfo_neClock.setStartTreaty(2);
//    frequencyInfo_neClock.setOscillationLevel(3);
//    frequencyInfo_neClock.setSystemRecoverTime(4);
//    frequencyInfo_neClock.setQualityLevel(5);
//    frequencyInfo_neClock.setExportRecoverTime(6);
//    frequencyInfo_neClock.setExportClockModel(7);
//    frequencyInfo_neClock.setHandleModel(8);
//    frequencyInfo_neClock.setClockSuppress(9);
//    frequencyInfo_neClock.setSystemJobStatus("15");
//    frequencyInfo_neClock.setSystemSourcce("16");
//    frequencyInfo_neClock.setExportJobStatus("17");
//    frequencyInfo_neClock.setExportSourcce("18");
    
//    int s=cc.update(frequencyInfo_neClock);
//    List<FrequencyInfo_neClock> FrequencyInfo_neClockList=cc.select();
//    for(FrequencyInfo_neClock s:FrequencyInfo_neClockList){
//    	System.out.println(s.getId());
//    }
//    int s=cc.insertFrequencyInfo_neClock(frequencyInfo_neClock);
    
    frequencyInfo_neClock=cc.select(12);
    System.out.println(frequencyInfo_neClock);
	}

	public List<FrequencyInfoNeClock> select(FrequencyInfoNeClock frequencyInfoNeClock) {
		List<FrequencyInfoNeClock> frequencyInfoNeClockList = null;
		try {
			frequencyInfoNeClockList = new ArrayList<FrequencyInfoNeClock>();
			frequencyInfoNeClockList = frequencyInfo_neClockDao.select(connection,frequencyInfoNeClock);
		} catch (Exception e) {
			ExceptionManage.dispose(e,this.getClass());
		}
		return frequencyInfoNeClockList;
	}

}
