<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.nms.db.dao.alarm.CurrentAlarmInfoMapper" >
  <resultMap id="BaseResultMap" type="CurrentAlarmInfo" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="siteid" property="siteid" jdbcType="INTEGER" />
    <result column="slotId" property="slotid" jdbcType="INTEGER" />
    <result column="objectid" property="objectid" jdbcType="INTEGER" />
    <result column="objecttype" property="objecttype" jdbcType="INTEGER" />
    <result column="objectname" property="objectname" jdbcType="VARCHAR" />
    <result column="alarmcode" property="alarmcode" jdbcType="INTEGER" />
    <result column="alarmlevel" property="alarmlevel" jdbcType="INTEGER" />
    <result column="happenedtime" property="happenedtime" jdbcType="VARCHAR" />
    <result column="confirmtime" property="confirmtime" jdbcType="VARCHAR" />
    <result column="clearedtime" property="clearedtime" jdbcType="VARCHAR" />
    <result column="ackuser" property="ackuser" jdbcType="VARCHAR" />
    <result column="comments" property="comments" jdbcType="VARCHAR" />
    <result column="capabilityCode" property="capabilitycode" jdbcType="INTEGER" />
    <result column="capabilityIdentity" property="capabilityidentity" jdbcType="VARCHAR" />
    <result column="alarmlevel_temp" property="alarmlevelTemp" jdbcType="INTEGER" />
    <result column="isCleared" property="iscleared" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, siteid, slotId, objectid, objecttype, objectname, alarmcode, alarmlevel, happenedtime, 
    confirmtime, clearedtime, ackuser, comments, capabilityCode, capabilityIdentity, 
    alarmlevel_temp, isCleared
  </sql>
  <insert id="insert" parameterType="CurrentAlarmInfo" >
    insert into current_alarm (id, siteid, slotId, 
      objectid, objecttype, objectname, 
      alarmcode, alarmlevel, happenedtime, 
      confirmtime, clearedtime, ackuser, 
      comments, capabilityCode, capabilityIdentity, 
      alarmlevel_temp, isCleared)
    values (#{id,jdbcType=INTEGER}, #{siteId,jdbcType=INTEGER}, #{slotId,jdbcType=INTEGER}, 
      #{objectId,jdbcType=INTEGER}, #{objectType_db,jdbcType=INTEGER}, #{objectName,jdbcType=VARCHAR}, 
      #{alarmCode,jdbcType=INTEGER}, #{alarmLevel,jdbcType=INTEGER}, #{happenedtime,jdbcType=VARCHAR}, 
      #{confirmtime,jdbcType=VARCHAR}, #{cleanTime,jdbcType=VARCHAR}, #{ackUser,jdbcType=VARCHAR}, 
      #{comments,jdbcType=VARCHAR}, #{capabilityCode,jdbcType=INTEGER}, #{capabilityIdentity,jdbcType=VARCHAR}, 
      #{warningLevel_temp,jdbcType=INTEGER}, #{isClear,jdbcType=INTEGER})
  </insert>
  <update id="update" parameterType="CurrentAlarmInfo">
  update  current_alarm as p set 
  p.confirmtime=#{confirmtime},p.clearedtime=#{cleanTime},p.ackuser=#{ackUser},
  p.comments=#{comments},p.alarmlevel=#{alarmLevel},p.alarmlevel_temp=#{warningLevel_temp},
  p.isCleared=#{isClear},p.happenedtime=#{happenedtime} where p.id=#{id} 
  </update>
   <select id="query_join" resultMap="CurrentAlarm" parameterType="CurrentAlarmInfo" >
     SELECT s.*, c.*,w.* FROM site_inst s, current_alarm c, warninglevel w WHERE s.site_inst_id = c.siteid AND 
     c.alarmcode = w.WarningCode AND c.alarmlevel = w.WarningLevel AND w.Manufacturer = 
    ( CASE WHEN ( SELECT co.codeValue FROM `code` co WHERE co.id = s.CellEditon ) = '0' THEN 1 ELSE 2 END ) 
   
  <if test="currentAlarm.id>0"> and c.id=#{currentAlarm.id}</if>
  <if test="currentAlarm.siteId!=0"> and c.siteid=#{currentAlarm.siteId}</if>
  <if test="currentAlarm.slotId!=0"> and c.slotId=#{currentAlarm.slotId}</if>
  <if test="currentAlarm.objectId!=0"> and c.objectid=#{currentAlarm.objectId}</if>
  <if test="currentAlarm.objectType!=null "> and c.objecttype=#{currentAlarm.objectType}</if>
  <if test="currentAlarm.alarmCode!=0"> and c.alarmcode=#{currentAlarm.alarmCode}</if>
  <if test="currentAlarm.alarmLevel!=0"> and c.alarmlevel=#{currentAlarm.alarmLevel}</if> 
  <if test="currentAlarm.warningLevel_temp !=0"> and c.alarmlevel_temp=#{currentAlarm.warningLevel_temp}</if>
  <if test="currentAlarm.alarmTime!=null and alarmTime!='' "> and c.happenedtime=#{currentAlarm.alarmTime}</if> 
  <if test="currentAlarm.objectName!=null and currentAlarm.objectName!='' "> and c.objectname=#{currentAlarm.objectName}</if>
    ORDER BY happenedtime desc
  </select>
  <resultMap id="CurrentAlarm" type="CurrentAlarmInfo" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="siteid" property="siteId" jdbcType="INTEGER" />
    <result column="slotId" property="slotId" jdbcType="INTEGER" />
    <result column="objectid" property="objectId" jdbcType="INTEGER" />
    <result column="objecttype" property="objectType_db" jdbcType="INTEGER" />
    <result column="objectname" property="objectName" jdbcType="VARCHAR" />
    <result column="alarmcode" property="alarmCode" jdbcType="INTEGER" />
    <result column="alarmlevel" property="alarmLevel" jdbcType="INTEGER" />
    <result column="happenedtime" property="happenedtime" jdbcType="VARCHAR" />
    <result column="confirmtime" property="confirmtime" jdbcType="VARCHAR" />
    <result column="clearedtime" property="cleanTime" jdbcType="VARCHAR" />
    <result column="ackuser" property="ackUser" jdbcType="VARCHAR" />
    <result column="comments" property="comments" jdbcType="VARCHAR" />
    <result column="capabilityCode" property="capabilityCode" jdbcType="INTEGER" />
    <result column="capabilityIdentity" property="capabilityIdentity" jdbcType="VARCHAR" />
    <result column="alarmlevel_temp" property="warningLevel_temp" jdbcType="INTEGER" />
    <result column="isCleared" property="isClear" jdbcType="INTEGER" />
    <result column="CellId" property="siteName" jdbcType="INTEGER" />
    <collection property="warningLevel" ofType="WarningLevel" >
        <id property="warningcode" column="w.WarningCode"/>
        <result column="id" property="id" jdbcType="INTEGER" />
        <result column="warningname" property="warningname" jdbcType="VARCHAR" />
        <result column="warningnote" property="warningnote" jdbcType="INTEGER" />
        <result column="warninglevel" property="warninglevel" jdbcType="INTEGER" />
        <result column="warninglevel_temp" property="warninglevel_temp" jdbcType="INTEGER" />
        <result column="warningcode" property="warningcode" jdbcType="INTEGER" />
        <result column="warningobject" property="warningobject" jdbcType="VARCHAR" />
        <result column="warningtype" property="warningtype" jdbcType="INTEGER" />
        <result column="manufacturer" property="manufacturer" jdbcType="INTEGER" />
        <result column="warningdescribe" property="warningdescribe" jdbcType="INTEGER" />
        <result column="waringeffect" property="waringeffect" jdbcType="VARCHAR" />
        <result column="waringremark" property="waringremark" jdbcType="INTEGER" />
        <result column="warningadvice" property="warningadvice" jdbcType="INTEGER" />
        <result column="warningmayreason" property="warningmayreason" jdbcType="INTEGER" />
    </collection>
  </resultMap>
  <update id="updateObjectid" >
		update current_alarm set objectid = #{0} where objecttype =#{2} and objectid in #{1}
  </update>
   <select id="queryByClent" resultMap="CurrentAlarm" parameterType="CurrentAlarmInfo" >
   SELECT c.*,w.* FROM  current_alarm c, warninglevel w WHERE  c.alarmcode = w.WarningCode AND c.alarmlevel = w.WarningLevel AND w.Manufacturer =1 and c.objectname LIKE '%EMS服务器_%' 
   </select>
   <select id="querySiteid" resultType="java.lang.Integer">
   SELECT site_inst_id from site_inst group by site_inst_id
   </select>
   <select id="queryMaxId" resultType="java.lang.Integer">
   select max(id) as maxid from current_alarm
   </select>
   <select id="selectAllIdList" resultType="java.lang.Integer" parameterMap="map" >
   select id from current_alarm where 1=1 
   <if test="siteIdList != null and siteIdList.size() > 0">
   and siteid in
   	<foreach item="item" index="index" collection="siteIdList" open="(" separator="," close="0)">  
 	 #{item}  
 	</foreach>
   </if>
   <if test="filter != null">
    <if test="filter.objectType_db == 2">
    and slotId in
    <foreach item="item" index="index" collection="filter.slotInsts" open="(" separator="," close="0)">  
 	 #{item}  
 	</foreach>
    </if>
    and alarmcode in
    <foreach item="item" index="index" collection="filter.alarmCodeList" open="(" separator="," close="0)">  
 	 #{item}  
 	</foreach>
 	and alarmlevel_temp in
 	<foreach item="item" index="index" collection="filter.alarmLevel" open="(" separator="," close="0)">  
 	 #{item}  
 	</foreach>
    <if test="filter.alarmState == 1">
 	and ackuser is not null
    </if>
    <if test="filter.alarmState != 1">
 	and ackuser is null
    </if>
    <if test="filter.happenTime != null">
    and (happenedtime between #{filter.happenTime} and #{filter.happenEndTime})
    </if>
    <if test="filter.ClearTime != null">
    and (clearedtime between #{filter.ClearTime} and #{filter.ClearEndTime})
    </if>
    <if test="filter.ensureTime != null">
    and (confirmtime between #{filter.ensureTime} and #{filter.ensureEndTime})
    </if>
    <if test="filter.ensureUser != null">
    and ackuser =#{filter.ensureUser}
    </if>
   </if>
   order by id desc
   </select>
   
    <select id="selectByPage" resultMap="CurrentAlarm" parameterMap="map" >
    <if test="direction == 0">
    SELECT * FROM current_alarm WHERE id > #{id}
    </if>
    <if test="direction != 0">
    SELECT * FROM current_alarm WHERE id &lt; #{id}
    </if>
   <if test="siteIdList != null and siteIdList.size() > 0">
   and siteid in
   	<foreach item="item" index="index" collection="siteIdList" open="(" separator="," close="0)">  
 	 #{item}  
 	</foreach>
   </if>
   <if test="filter != null">
    <if test="filter.objectType_db == 2">
    and slotId in
    <foreach item="item" index="index" collection="filter.slotInsts" open="(" separator="," close="0)">  
 	 #{item}  
 	</foreach>
    </if>
    and alarmcode in
    <foreach item="item" index="index" collection="filter.alarmCodeList" open="(" separator="," close="0)">  
 	 #{item}  
 	</foreach>
 	and alarmlevel_temp in
 	<foreach item="item" index="index" collection="filter.alarmLevel" open="(" separator="," close="0)">  
 	 #{item}  
 	</foreach>
    <if test="filter.alarmState == 1">
 	and ackuser is not null
    </if>
    <if test="filter.alarmState != 1">
 	and ackuser is null
    </if>
    <if test="filter.happenTime != null">
    and (happenedtime between #{filter.happenTime} and #{filter.happenEndTime})
    </if>
    <if test="filter.ClearTime != null">
    and (clearedtime between #{filter.ClearTime} and #{filter.ClearEndTime})
    </if>
    <if test="filter.ensureTime != null">
    and (confirmtime between #{filter.ensureTime} and #{filter.ensureEndTime})
    </if>
    <if test="filter.ensureUser != null">
    and ackuser =#{filter.ensureUser}
    </if>
   </if>
    <if test="direction == 0">
    ORDER BY id ASC LIMIT #{pageCount}
    </if>
    <if test="direction != 0">
    ORDER BY id DESC LIMIT #{pageCount}
    </if>
   </select>
   <delete id="delete" parameterType="java.lang.Integer" >
   delete from current_alarm where id=#{0}
   </delete>
   <select id="queryCurrBySites" parameterType="java.lang.Integer" resultMap="CurrentAlarm">
  SELECT * from current_alarm where happenedtime = (SELECT MAX(happenedtime) from current_alarm GROUP BY objectid,siteid, objecttype
  HAVING objecttype = 1 and objectid = #{0} and siteid=#{0})
  </select>
</mapper>