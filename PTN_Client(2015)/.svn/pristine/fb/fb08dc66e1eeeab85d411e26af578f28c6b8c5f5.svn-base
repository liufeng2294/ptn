package com.nms.db.dao.ptn;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;

import com.nms.db.bean.equipment.port.PortDiscardInfo;

public class PortDiscardDao {
	/**
	 * 修改 PortDiscardInfo portDiscardInfo
	 * @param PortDiscardInfo portDiscardInfo
	 * @param conn  数据库连接
	 * @return   记录数
	 * @throws Exception
	 */
	public int update(PortDiscardInfo portDiscardInfo,Connection connection)throws Exception{
		if (null == portDiscardInfo) {
			throw new Exception("portDiscardInfo is null");
		}

		if (null == connection) {
			throw new Exception("connection is null");
		}
		
		String sql = null;
		PreparedStatement preparedStatement = null;
		int result = 0;
		
		try {
			sql = "update portDiscard_inst set portLine1=?,portLine2=?,portLine3=?,portLine4=?" +
					" where siteId=? and id =?";
			preparedStatement = connection.prepareStatement(sql);
			preparedStatement.setInt(1, portDiscardInfo.getPortLine1());
			preparedStatement.setInt(2, portDiscardInfo.getPortLine2());
			preparedStatement.setInt(3, portDiscardInfo.getPortLine3());
			preparedStatement.setInt(4, portDiscardInfo.getPortLine4());
			preparedStatement.setInt(5, portDiscardInfo.getSiteId());
			preparedStatement.setInt(6, portDiscardInfo.getId());
			result = preparedStatement.executeUpdate();
		} catch (Exception e) {
			throw e;
		}finally{
			if (preparedStatement != null) {
				try {
					preparedStatement.close();
				} catch (Exception e) {
					throw e;
				}
				preparedStatement = null;
			}
			sql = null;
		
		}
		return result;
	}
	
	/**
	 * 查询全部
	 * @param condition	查询条件
	 * @param connection  数据库连接
	 * @return	List<portDiscardInfo>
	 * @throws Exception   portDiscardInfo portDiscardInfo
	 */
	public List<PortDiscardInfo> queryByCondition(int siteId,Connection connection)throws Exception{

		if(connection == null){
			throw new Exception("Connection is null");
		}
		List<PortDiscardInfo> portDiscardInfoList = null;
		String sql = null;
		ResultSet resultSet = null;
		PreparedStatement preparedStatement = null;
		
		try{
			portDiscardInfoList = new ArrayList<PortDiscardInfo>();
			sql = "select *from portDiscard_inst where siteId=?";
			preparedStatement =  connection.prepareStatement(sql);
			preparedStatement.setInt(1, siteId);
			resultSet  = preparedStatement.executeQuery();
			
			while(resultSet.next()){
				PortDiscardInfo	portDiscardInfo = new PortDiscardInfo();
				portDiscardInfo.setId(resultSet.getInt("id"));
				portDiscardInfo.setSiteId(resultSet.getInt("siteId"));
				portDiscardInfo.setPortLine1(resultSet.getInt("portLine1"));
				portDiscardInfo.setPortLine2(resultSet.getInt("portLine2"));
				portDiscardInfo.setPortLine3(resultSet.getInt("portLine3"));
				portDiscardInfo.setPortLine4(resultSet.getInt("portLine4"));
				portDiscardInfoList.add(portDiscardInfo);
			}
		}catch(Exception e){
			throw e;
		}finally{
			if(resultSet != null){
				try {
					resultSet.close();
				} catch (Exception e) {
					throw e;
				}
				resultSet = null;
			}
			if(preparedStatement != null){
				try {
					preparedStatement.close();
				} catch (Exception e) {
					throw e;
				}
				preparedStatement = null;
			}
			sql = null;
		}
		return portDiscardInfoList;
	}
	/**
	 * 添加 PortDiscardInfo
	 * @param info 
	 * @param connection
	 * @return
	 * @throws Exception
	 */
	public int insert(PortDiscardInfo portDiscardInfo,Connection connection)throws Exception{
		if (null == portDiscardInfo) {
			throw new Exception("AclInfo is null");
		}

		if (null == connection) {
			throw new Exception("connection is null");
		}
		String sql = null;
		int result = 0;
		PreparedStatement preparedStatement = null;
		ResultSet resultSet = null; 
		try {
			
			sql = "insert into portDiscard_inst (siteId,portLine1,portLine2,portLine3,portLine4" +
					") values(?,?,?,?,?)";
			preparedStatement = connection.prepareStatement(sql,Statement.RETURN_GENERATED_KEYS);
			preparedStatement.setInt(1, portDiscardInfo.getSiteId());
			preparedStatement.setInt(2, portDiscardInfo.getPortLine1());
			preparedStatement.setInt(3, portDiscardInfo.getPortLine2());
			preparedStatement.setInt(4, portDiscardInfo.getPortLine3());
			preparedStatement.setInt(5, portDiscardInfo.getPortLine4());
			preparedStatement.executeUpdate();
			resultSet = preparedStatement.getGeneratedKeys();
			
			if(resultSet.next()){
				result = resultSet.getInt(1);
            }
		} catch (Exception e) {
			throw e;
		}finally{
			if (resultSet != null) {
				try {
					resultSet.close();
				} catch (Exception e) {
					throw e;
				}
				resultSet = null;
			}
			if (preparedStatement != null) {
				try {
					preparedStatement.close();
				} catch (Exception e) {
					throw e;
				}
				preparedStatement = null;
			}
			sql = null;
		}
		return result;
	}

	public void delete(PortDiscardInfo portDiscardInfo, Connection connection) throws Exception {
		if (null == connection) {
			throw new Exception("connection is null");
		}
		
		PreparedStatement preparedStatement = null;
		String sql = null;
		try {
			
			sql = "delete from portDiscard_inst where id= ? and siteId= ? ";
			preparedStatement = connection.prepareStatement(sql);
			preparedStatement.setInt(1, portDiscardInfo.getId());
			preparedStatement.setInt(2, portDiscardInfo.getSiteId());
			preparedStatement.executeUpdate();
		} catch (Exception e) {
			throw e;
		} finally {
			if (preparedStatement != null) {
				try {
					preparedStatement.close();
				} catch (Exception e) {
					throw e;
				}
				preparedStatement = null;
			}
			sql = null;
		}
	}
}
