package com.nms.model.ptn;

import org.apache.ibatis.session.SqlSession;
import com.nms.db.dao.ptn.MacLearningLimitMapper;
import com.nms.model.util.ObjectService_Mybatis;

public class MacLearningService_MB extends ObjectService_Mybatis {
	    private MacLearningLimitMapper mapper = null;
		
		public void setPtnuser(String ptnuser) {
			super.ptnuser = ptnuser;
		}

		public void setSqlSession(SqlSession sqlSession) {
			super.sqlSession = sqlSession;
		}
		
		public MacLearningLimitMapper getMapper() {
			return mapper;
		}

		public void setMapper(MacLearningLimitMapper mapper) {
			this.mapper = mapper;
		}
//	private MacLearningDao macDao = new MacLearningDao();
//	
//	public void save(MacLearningInfo macInfo) throws Exception {
//		if(macInfo == null){
//			throw new Exception("macInfo is null");
//		}
//		connection.setAutoCommit(false);
//		try {
//			macDao.insert(macInfo, connection);
//			if(!connection.getAutoCommit()){
//				connection.commit();
//			}
//		} catch (Exception e) {
//			connection.rollback();
//			ExceptionManage.dispose(e, this.getClass());
//		} finally {
//			connection.setAutoCommit(true);
//		}
//	}
//
//	public void update(MacLearningInfo macInfo) throws SQLException {
//		connection.setAutoCommit(false);
//		try {
//			macDao.update(macInfo, connection);
//			if(!connection.getAutoCommit()){
//				connection.commit();
//			}
//		} catch (Exception e) {
//			connection.rollback();
//			ExceptionManage.dispose(e, this.getClass());
//		} finally {
//			connection.setAutoCommit(true);
//		}
//	}
//
//	/**
//	 * 多选删除
//	 * 虚拟网元操作
//	 */
//	public void delete(List<MacLearningInfo> list) throws SQLException {
//		connection.setAutoCommit(false);
//		try {
//			if(list != null){
//				for (MacLearningInfo mac : list) {
//					macDao.delete(mac.getId(), connection);
//				}
//			}
//			if(!connection.getAutoCommit()){
//				connection.commit();
//			}
//		} catch (Exception e) {
//			connection.rollback();
//			ExceptionManage.dispose(e, this.getClass());
//		} finally {
//			connection.setAutoCommit(true);
//		}
//		
//	}
//
//	/**
//	 * 根据网元id查询对应的mac
//	 * @param siteId
//	 * @return
//	 * @throws SQLException
//	 */
//	public List<MacLearningInfo> selectBySiteId(int siteId) throws SQLException {
//		connection.setAutoCommit(false);
//		List<MacLearningInfo> macLearningInfoList = new ArrayList<MacLearningInfo>();
//		try {
//			macLearningInfoList = macDao.selectBySiteId(siteId, connection);
//			
//			if(!connection.getAutoCommit()){
//				connection.commit();
//			}
//		} catch (Exception e) {
//			connection.rollback();
//			ExceptionManage.dispose(e, this.getClass());
//		} finally {
//			connection.setAutoCommit(true);
//		}
//		return macLearningInfoList;
//	}
//
//	public void delete(MacLearningInfo macInfo) throws SQLException {
//		connection.setAutoCommit(false);
//		try {
//			macDao.delete(macInfo.getId(), connection);
//			if(!connection.getAutoCommit()){
//				connection.commit();
//			}
//		} catch (Exception e) {
//			connection.rollback();
//			ExceptionManage.dispose(e, this.getClass());
//		} finally {
//			connection.setAutoCommit(true);
//		}
//		
//	}
//
//	public MacLearningInfo selectById(int id) throws SQLException {
//		connection.setAutoCommit(false);
//		MacLearningInfo macLearningInfo = new MacLearningInfo();
//		try {
//			macLearningInfo = macDao.selectById(id, connection);
//			if(!connection.getAutoCommit()){
//				connection.commit();
//			}
//		} catch (Exception e) {
//			connection.rollback();
//			ExceptionManage.dispose(e, this.getClass());
//		} finally {
//			connection.setAutoCommit(true);
//		}
//		return macLearningInfo;
//	}
//
//	public void deleteByPortId(int portId) throws SQLException {
//		connection.setAutoCommit(false);
//		try {
//			macDao.deleteByPortId(portId, connection);
//			if(!connection.getAutoCommit()){
//				connection.commit();
//			}
//		} catch (Exception e) {
//			connection.rollback();
//			ExceptionManage.dispose(e, this.getClass());
//		} finally {
//			connection.setAutoCommit(true);
//		}
//		
//	}
//
//	public List<MacLearningInfo> queryBySiteId(int siteId) throws SQLException {
//		connection.setAutoCommit(false);
//		List<MacLearningInfo> macLearningInfoList = new ArrayList<MacLearningInfo>();
//		try {
//			macLearningInfoList = macDao.queryBySiteId(siteId, connection);
//			if(!connection.getAutoCommit()){
//				connection.commit();
//			}
//		} catch (Exception e) {
//			connection.rollback();
//			ExceptionManage.dispose(e, this.getClass());
//		} finally {
//			connection.setAutoCommit(true);
//		}
//		return macLearningInfoList;
//	}
//
//	public List<Integer> selectAllPortId(int siteId) throws SQLException {
//		connection.setAutoCommit(false);
//		List<Integer> integerList = new ArrayList<Integer>();
//		try {
//			integerList = macDao.selectAllPortId(siteId, connection);
//			if(!connection.getAutoCommit()){
//				connection.commit();
//			}
//		} catch (Exception e) {
//			connection.rollback();
//			ExceptionManage.dispose(e, this.getClass());
//		} finally {
//			connection.setAutoCommit(true);
//		}
//		return integerList;
//	}
//
//	public boolean selectCountByPortId(int portId) throws SQLException {
//		connection.setAutoCommit(false);
//		boolean flag = false;
//		try {
//			flag = macDao.selectCountByPortId(portId, connection);
//			if(!connection.getAutoCommit()){
//				connection.commit();
//			}
//		} catch (Exception e) {
//			connection.rollback();
//			ExceptionManage.dispose(e, this.getClass());
//		} finally {
//			connection.setAutoCommit(true);
//		}
//		return flag;
//	}

}
