package com.nms.model.system.code;

import java.sql.Connection;
import java.util.List;

import com.nms.db.bean.system.code.Code;
import com.nms.db.dao.system.code.CodeDao;
import com.nms.model.util.ObjectService;
import com.nms.ui.manager.ExceptionManage;

public class CodeService extends ObjectService {

	public void setConnection(Connection connection) {
		super.connection = connection;
	}

	public void setPtnuser(String ptnuser) {
		super.ptnuser = ptnuser;
	}

	private CodeDao codeDao = new CodeDao();

	/**
	 * 新增或修改code对象，通过code.getId()来判断是修改还是新增
	 * 
	 * @param code
	 *            实体
	 * @return 执行成功的记录数
	 * @throws Exception
	 */
	public int saveOrUpdate(Code code) throws Exception {

		if (code == null) {
			throw new Exception("code is null");
		}

		int result = 0;
		try {

			if (code.getId() == 0) {
				result = this.codeDao.insert(code, connection);
			} else {
				result = this.codeDao.update(code, connection);
			}

		} catch (Exception e) {
			ExceptionManage.dispose(e,this.getClass());
		}
		return result;
	}

	/**
	 * 通过主键删除code对象
	 * 
	 * @param id
	 *            主键
	 * @return 删除的记录数
	 * @throws Exception
	 */
	public int delete(int id) throws Exception {

		int result = 0;

		try {
			result = codeDao.delete( id , connection);
		} catch (Exception e) {
			ExceptionManage.dispose(e,this.getClass());
		}
		return result;

	}

	/**
	 * 通过codeGroupId删除code对象
	 */
	public int deleteBycodeGroupId(int codeGroupId) throws Exception {
		int result = 0;

		try {
			result = codeDao.deleteBycodeGroupId(codeGroupId, connection);
		} catch (Exception e) {
			ExceptionManage.dispose(e,this.getClass());
		}
		return result;
	}

	/**
	 * 查询全部code
	 * 
	 * @return code 集合
	 * @throws Exception
	 */
	public List<Code> select() throws Exception {
		List<Code> codeList = null;

		try {
			Code code = new Code();
			codeList = codeDao.queryByCondition(code, connection);
		} catch (Exception e) {
			ExceptionManage.dispose(e,this.getClass());
		}
		return codeList;
	}

	/**
	 * 根据条件查询code
	 * @param code 查询条件
	 * @return code集合
	 * @throws Exception
	 */
	public List<Code> select(Code code) throws Exception {
		List<Code> codeList = null;

		try {
			codeList = codeDao.queryByCondition(code, connection);
		} catch (Exception e) {
			ExceptionManage.dispose(e,this.getClass());
		}
		return codeList;
	}
	/**
	 * 根据条件查询code
	 * @param code 查询条件
	 * @return code集合
	 * @throws Exception
	 */
	public List<Code> selectByCode(Code code) throws Exception {
		List<Code> codeList = null;

		try {
			codeList = codeDao.queryByCode(code, connection);
		} catch (Exception e) {
			ExceptionManage.dispose(e,this.getClass());
		}
		return codeList;
	}
	
	public static void main(String[] args) throws Exception {
	}
}
