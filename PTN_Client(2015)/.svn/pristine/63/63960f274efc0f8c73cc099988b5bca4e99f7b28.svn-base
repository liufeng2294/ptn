package com.nms.model.ptn;

import org.apache.ibatis.session.SqlSession;
import com.nms.db.dao.ptn.EthServiceInstMapper;
import com.nms.model.util.ObjectService_Mybatis;


public class EthService_MB extends ObjectService_Mybatis{
	
	   private EthServiceInstMapper mapper = null;
		
		public void setPtnuser(String ptnuser) {
			super.ptnuser = ptnuser;
		}

		public void setSqlSession(SqlSession sqlSession) {
			super.sqlSession = sqlSession;
		}
		
		public EthServiceInstMapper getMapper() {
			return mapper;
		}

		public void setMapper(EthServiceInstMapper mapper) {
			this.mapper = mapper;
		}
//	/**
//	 * 新增
//	 * @param ethServiceInfo
//	 * @throws Exception
//	 */
//	public int save(List<EthServiceInfo> ethServiceInfos) throws Exception{
//		
//		if(ethServiceInfos == null){
//			throw new Exception("ethServiceInfos is null");
//		}
//		int result = 0;
//		try {
//			result = ethServiceDao.insert(ethServiceInfos, connection);
//		} catch (Exception e) {
//			connection.rollback();
//			ExceptionManage.dispose(e,this.getClass());
//		}
//		return result;
//	}
//	/**
//	 * 查询该网元下所有信息
//	 * @param siteId
//	 * @return
//	 * @throws Exception
//	 */
//	public List<EthServiceInfo> select(int siteId) throws Exception{
//		List<EthServiceInfo> ethServiceInfoList = null;
//		if(siteId == 0){
//			throw new Exception("siteId is null");
//		}   
//		try {
//			connection.setAutoCommit(false);
//			ethServiceInfoList = ethServiceDao.queryByCondition(siteId, connection);
//			if(!connection.getAutoCommit()){
//				connection.commit();
//			}
//		} catch (Exception e) {
//			connection.rollback();
//			ExceptionManage.dispose(e,this.getClass());
//		}finally{
//			connection.setAutoCommit(true);
//		}
//		return ethServiceInfoList;
//	}
//	
//	
//	/**
//	 * 通过条件查询
//	 * @param siteId
//	 * @return
//	 * @throws Exception
//	 */
//	public boolean  select(List<Integer> valans,int siteId) throws Exception{
//		if(siteId == 0){
//			throw new Exception("siteId is null");
//		}   
//		try {
//			return  ethServiceDao.queryByCondition(valans,siteId, connection);
//		} catch (Exception e) {
//			ExceptionManage.dispose(e,this.getClass());
//		}
//		return false;
//	}
//	
//	public int allCount(int siteId) throws Exception
//	{
//		if(siteId == 0){
//			throw new Exception("siteId is null");
//		}   
//		try {
//			return  ethServiceDao.findAllCount(siteId, connection);
//		} catch (Exception e) {
//			ExceptionManage.dispose(e,this.getClass());
//		}
//		return 0;
//	}
//	
//	
//	/**
//	 * 更新
//	 * @param ethServiceInfo
//	 * @throws Exception
//	 */
//	public void update(EthServiceInfo ethServiceInfo) throws Exception{
//		if(ethServiceInfo == null){
//			throw new Exception("ethServiceInfo is null");
//		}
//		try {
//			connection.setAutoCommit(false);
//			ethServiceDao.update(ethServiceInfo, connection);
//			if(!connection.getAutoCommit()){
//				connection.commit();
//			}
//		} catch (Exception e) {
//			connection.rollback();
//			ExceptionManage.dispose(e,this.getClass());
//		}finally{
//			connection.setAutoCommit(true);
//		}
//	}
//	
//	/**
//	 *删除
//	 * @param ethServiceInfo
//	 * @throws Exception
//	 */
//	public void delete(EthServiceInfo ethServiceInfo) throws Exception{
//		if(ethServiceInfo == null){
//			throw new Exception("ethServiceInfo is null");
//		}
//		try {
//			connection.setAutoCommit(false);
//			ethServiceDao.delete(ethServiceInfo, connection);
//			if(!connection.getAutoCommit()){
//				connection.commit();
//			}
//		} catch (Exception e) {
//			connection.rollback();
//			ExceptionManage.dispose(e,this.getClass());
//		}finally{
//			connection.setAutoCommit(true);
//		}
//	}
//	
//	/**
//	 *批量删除
//	 * @param ethServiceInfo
//	 * @throws Exception
//	 */
//	public void delete(List<EthServiceInfo> ethServiceInfos) throws Exception{
//		if(ethServiceInfos == null){
//			throw new Exception("ethServiceInfo is null");
//		}
//		try {
//			connection.setAutoCommit(false);
//			for(EthServiceInfo ethInfo : ethServiceInfos)
//			{
//				ethServiceDao.delete(ethInfo, connection);
//			}
//			if(!connection.getAutoCommit()){
//				connection.commit();
//			}
//		} catch (Exception e) {
//			connection.rollback();
//			ExceptionManage.dispose(e,this.getClass());
//		}finally{
//			connection.setAutoCommit(true);
//		}
//	}
//	/**
//	 * 查询
//	 * 
//	 * @param ethServiceInfo
//	 * @return
//	 * @throws Exception
//	 */
//	public List<EthServiceInfo> queryByNeID(EthServiceInfo ethServiceInfo) throws Exception {
//		if (ethServiceInfo == null) {
//			throw new Exception("ethServiceInfo is null");
//		}
//		List<EthServiceInfo> ethServiceInfoList = null;
//		try {
//			ethServiceInfoList = ethServiceDao.queryOamLinkInfoByCondition(ethServiceInfo, connection);
//		} catch (Exception e) {
//			ExceptionManage.dispose(e,this.getClass());
//		}
//		return ethServiceInfoList;
//	}
//	
//	/**
//	 * 根据网元删除所属网元的数据
//	 * @param ethServiceInfo
//	 * @throws Exception
//	 */
//	public void deleteBySite(EthServiceInfo ethServiceInfo)throws Exception {
//		if (ethServiceInfo == null) {
//			throw new Exception("ethServiceInfo is null");
//		}
//		try {
//			ethServiceDao.deleteAllBySite(ethServiceInfo, connection);
//		} catch (Exception e) {
//			ExceptionManage.dispose(e,this.getClass());
//		}
//	}
//	/**
//	 * 根据端口号，查询该端口的二层vlan值
//	 * @param siteId
//	 * @param portLine
//	 * @return
//	 */
//	public List<Integer> queryBySiteIdAndPortLine(int siteId,String portLine,int num){
//		List<Integer> vlanIDs = null;
//		try {
//			vlanIDs = ethServiceDao.queryBySiteIdAndPortLine(siteId,portLine,num, connection);
//		} catch (Exception e) {
//			ExceptionManage.dispose(e,this.getClass());
//		}
//		return vlanIDs;
//	}
//
//	
//	/**
//	 * 根据网元删除所属网元的数据
//	 * @param ethServiceInfo
//	 * @throws Exception
//	 */
//	public void deleteBySiteId(int siteId)throws Exception {
//		if (siteId == 0) {
//			throw new Exception("ethServiceInfo is null");
//		}
//		try {
//			ethServiceDao.deleteAllBySiteId(siteId, connection);
//		} catch (Exception e) {
//			ExceptionManage.dispose(e,this.getClass());
//		}
//	}
}


