package com.nms.db.dao.ptn;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.List;

import com.nms.db.bean.ptn.Businessid;

public class BusinessidDao {

//	private final String SQL_QUERY_SITEID = " (SELECT idvalue FROM businessid z WHERE z.siteid = ? AND z.idStatus = 0) ";

	/**
	 * 批量插入id值
	 * 
	 * @param siteId
	 *            网元id
	 * @param type
	 *            类型（pw,lsp,tunnel）
	 * @param begin
	 *            id起始值
	 * @param end
	 *            id最大值
	 * @param connection
	 *            数据库连接
	 * @throws Exception
	 */
	public void insertBatch(int siteId, String type, int begin, int end, Connection connection) throws Exception {

		if (null == connection) {
			throw new Exception("connection is null");
		}
		String sql = null;
		PreparedStatement preparedStatement = null;
		try {
			sql = "insert into businessid (siteid,type,idvalue,idstatus) values(?,?,?,0)";
			preparedStatement = connection.prepareStatement(sql);
			for (int i = begin; i <= end; i++) {
				preparedStatement.setInt(1, siteId);
				preparedStatement.setString(2, type);
				preparedStatement.setInt(3, i);
				preparedStatement.addBatch();
			}
			preparedStatement.executeBatch();

		} catch (Exception e) {
			throw e;
		} finally {
			if (preparedStatement != null) {
				try {
					preparedStatement.close();
				} catch (Exception e) {
					throw e;
				}
				preparedStatement = null;
			}
			sql = null;
		}
	}

	/**
	 * 修改状态
	 * 
	 * @param connection
	 *            数据库连接
	 * @throws Exception
	 */
	public void update(int id, int idStatus, Connection connection) throws Exception {
		if (null == connection) {
			throw new Exception("connection is null");
		}

		String sql = null;
		PreparedStatement preparedStatement = null;
		try {
			sql = "update businessid set idstatus=? where id=?";
			preparedStatement = connection.prepareStatement(sql);
			preparedStatement.setInt(1, idStatus);
			preparedStatement.setInt(2, id);
			preparedStatement.executeUpdate();

		} catch (Exception e) {
			throw e;
		} finally {
			if (preparedStatement != null) {
				try {
					preparedStatement.close();
				} catch (Exception e) {
					throw e;
				}
				preparedStatement = null;
			}
			sql = null;
		}
	}

	/**
	 * 根据网元ID删除
	 * 
	 * @param siteId
	 *            网元id
	 * @param connection
	 *            数据库连接
	 * @throws Exception
	 */
	public void delete(int siteId, Connection connection) throws Exception {
		if (null == connection) {
			throw new Exception("connection is null");
		}

		String sql = null;
		PreparedStatement preparedStatement = null;
		try {
			sql = "delete from businessid where siteid=?";
			preparedStatement = connection.prepareStatement(sql);
			preparedStatement.setInt(1, siteId);
			preparedStatement.executeUpdate();

		} catch (Exception e) {
			throw e;
		} finally {
			if (preparedStatement != null) {
				try {
					preparedStatement.close();
				} catch (Exception e) {
					throw e;
				}
				preparedStatement = null;
			}
			sql = null;
		}
	}

	/**
	 * 查询
	 * 
	 * @param siteId
	 *            网元id
	 * @param type
	 *            类型
	 * @param connection
	 *            数据库连接
	 * @return 业务id对象
	 * @throws Exception
	 */
	public Businessid query(int siteId, String type, Connection connection) throws Exception {
		if (null == connection) {
			throw new Exception("connection is null");
		}

		String sql = null;
		PreparedStatement preparedStatement = null;
		ResultSet resultSet = null;
		Businessid businessid = null;
		try {

			sql = "select * from businessid where siteid=? and type=? and idstatus=0 order by idvalue";
			preparedStatement = connection.prepareStatement(sql);
			preparedStatement.setInt(1, siteId);
			preparedStatement.setString(2, type);
			resultSet = preparedStatement.executeQuery();

			if (resultSet.next()) {
				businessid = new Businessid();
				businessid.setId(resultSet.getInt("id"));
				businessid.setIdStatus(resultSet.getInt("idStatus"));
				businessid.setIdValue(resultSet.getInt("idvalue"));
				businessid.setSiteId(resultSet.getInt("siteId"));
				businessid.setType(resultSet.getString("type"));
			}

		} catch (Exception e) {
			throw e;
		} finally {
			if (resultSet != null) {
				try {
					resultSet.close();
				} catch (Exception e) {
					throw e;
				}
				resultSet = null;
			}
			if (preparedStatement != null) {
				try {
					preparedStatement.close();
				} catch (Exception e) {
					throw e;
				}
				preparedStatement = null;
			}
			sql = null;
		}
		return businessid;
	}

	/**
	 * 查询
	 * 
	 * @param siteId
	 *            网元id
	 * @param type
	 *            类型
	 * @param idvalue
	 *            id值
	 * @param connection
	 *            数据库连接
	 * @return 业务id对象
	 * @throws Exception
	 */
	public Businessid query(int idvalue, int siteid, String type, Connection connection) throws Exception {
		if (null == connection) {
			throw new Exception("connection is null");
		}

		String sql = null;
		PreparedStatement preparedStatement = null;
		ResultSet resultSet = null;
		Businessid businessid = null;
		try {

			sql = "select * from businessid where siteid=? and type=? and idvalue=?";
			preparedStatement = connection.prepareStatement(sql);
			preparedStatement.setInt(1, siteid);
			preparedStatement.setString(2, type);
			preparedStatement.setInt(3, idvalue);
			resultSet = preparedStatement.executeQuery();

			if (resultSet.next()) {
				businessid = new Businessid();
				businessid.setId(resultSet.getInt("id"));
				businessid.setIdStatus(resultSet.getInt("idStatus"));
				businessid.setIdValue(resultSet.getInt("idvalue"));
				businessid.setSiteId(resultSet.getInt("siteId"));
				businessid.setType(resultSet.getString("type"));
			}

		} catch (Exception e) {
			throw e;
		} finally {
			if (resultSet != null) {
				try {
					resultSet.close();
				} catch (Exception e) {
					throw e;
				}
				resultSet = null;
			}
			if (preparedStatement != null) {
				try {
					preparedStatement.close();
				} catch (Exception e) {
					throw e;
				}
				preparedStatement = null;
			}
			sql = null;
		}
		return businessid;
	}

	/**
	 * 修改idvalue值对应的状态
	 * 
	 * @param connection
	 *            数据库连接
	 * @throws Exception
	 */
	public void updateBusinessid(Businessid businessId, Connection connection) throws Exception {
		if (null == connection) {
			throw new Exception("connection is null");
		}

		String sql = null;
		PreparedStatement preparedStatement = null;
		try {
			sql = "update businessid set idStatus=? where siteId=? and type=? and idvalue=?";
			preparedStatement = connection.prepareStatement(sql);
			preparedStatement.setInt(1, businessId.getIdStatus());
			preparedStatement.setInt(2, businessId.getSiteId());
			preparedStatement.setString(3, businessId.getType());
			preparedStatement.setInt(4, businessId.getIdValue());
			preparedStatement.executeUpdate();

		} catch (Exception e) {
			throw e;
		} finally {
			if (preparedStatement != null) {
				try {
					preparedStatement.close();
				} catch (Exception e) {
					throw e;
				}
				preparedStatement = null;
			}
			sql = null;
		}
	}

	/**
	 * 根据网元ID集合查询出此网元下所有相同的环ID
	 * 
	 * @throws Exception
	 * 
	 */
	public int queryBySite(List<Integer> siteIds, String type,Connection connection) throws Exception {

		if (null == siteIds || siteIds.size() == 0) {
			throw new Exception("siteIds is null");
		}

		if (null == connection) {
			throw new Exception("connection is null");
		}

		StringBuffer sql = null;
		String tableName = "tmp";
		PreparedStatement preparedStatement = null;
		ResultSet resultSet = null;
		int result = 0;
		try {
			sql = new StringBuffer();
			sql.append("SELECT tmp1.idvalue AS idvalue from");
			for (int i = 1; i <= siteIds.size(); i++) {
				sql.append("(SELECT idvalue FROM businessid z WHERE z.siteid = ? AND z.idStatus = 0 AND type = '" + type+"')"+ tableName + i + ",");
			}
			sql = new StringBuffer(sql.substring(0, sql.length() - 1));
			//拼where条件
			sql.append(" where ");
			for (int i = 1; i <= siteIds.size(); i++) {
				if(i+1<=siteIds.size()){
					sql.append(tableName + i + ".idvalue ="+tableName+(i+1)+".idvalue and ");
				}else{
					sql.append(tableName + i + ".idvalue ="+tableName+"1.idvalue");
				}
			}
			
			preparedStatement = connection.prepareStatement(sql.toString());
			for (int i = 1; i <= siteIds.size(); i++) {
				preparedStatement.setInt(i, siteIds.get(i - 1));
			}
//			sql.append(" AND type = "+type);
			resultSet = preparedStatement.executeQuery();
			if (resultSet.next()) {
				result = resultSet.getInt("idvalue");
			}

		} catch (Exception e) {
			throw e;
		} finally {
			if (resultSet != null) {
				try {
					resultSet.close();
				} catch (Exception e) {
					throw e;
				}
				resultSet = null;
			}
			if (preparedStatement != null) {
				try {
					preparedStatement.close();
				} catch (Exception e) {
					throw e;
				}
				preparedStatement = null;
			}
			sql = null;
			tableName = null;
		}

		return result;
	}
	
	/**
	 * 根据网元id修改状态
	 * 
	 * @param connection
	 *            数据库连接
	 * @throws Exception
	 */
	public void updateBySiteId(int siteId, int idStatus, Connection connection) throws Exception {
		if (null == connection) {
			throw new Exception("connection is null");
		}

		String sql = null;
		PreparedStatement preparedStatement = null;
		try {
			sql = "update businessid set idstatus=? where siteId=? and idStatus=1";
			preparedStatement = connection.prepareStatement(sql);
			preparedStatement.setInt(1, idStatus);
			preparedStatement.setInt(2, siteId);
			preparedStatement.executeUpdate();

		} catch (Exception e) {
			throw e;
		} finally {
			if (preparedStatement != null) {
				try {
					preparedStatement.close();
				} catch (Exception e) {
					throw e;
				}
				preparedStatement = null;
			}
			sql = null;
		}
	}

	/**
	 * 查询
	 * 
	 * @param siteId
	 *            网元id
	 * @param type
	 *            类型
	 * @param connection
	 *            数据库连接
	 * @return 业务id对象集合
	 * @throws Exception
	 */
	public List<Businessid> queryList(int siteId, String type, Connection connection) throws Exception {
		if (null == connection) {
			throw new Exception("connection is null");
		}

		String sql = null;
		PreparedStatement preparedStatement = null;
		ResultSet resultSet = null;
		Businessid businessid = null;
		List<Businessid> businessIdList = null;
		try {
			businessIdList = new ArrayList<Businessid>();

			sql = "select * from businessid where siteid=? and type=? and idstatus=0 order by idvalue";
			preparedStatement = connection.prepareStatement(sql);
			preparedStatement.setInt(1, siteId);
			preparedStatement.setString(2, type);
			resultSet = preparedStatement.executeQuery();

			while (resultSet.next()) {
				businessid = new Businessid();
				businessid.setId(resultSet.getInt("id"));
				businessid.setIdStatus(resultSet.getInt("idStatus"));
				businessid.setIdValue(resultSet.getInt("idvalue"));
				businessid.setSiteId(resultSet.getInt("siteId"));
				businessid.setType(resultSet.getString("type"));
				businessIdList.add(businessid);
			}

		} catch (Exception e) {
			throw e;
		} finally {
			if (resultSet != null) {
				try {
					resultSet.close();
				} catch (Exception e) {
					throw e;
				}
				resultSet = null;
			}
			if (preparedStatement != null) {
				try {
					preparedStatement.close();
				} catch (Exception e) {
					throw e;
				}
				preparedStatement = null;
			}
			sql = null;
			businessid = null;
		}
		return businessIdList;
	}

	
	/**
	 * 查询
	 * 
	 * @param siteId
	 *            网元id
	 * @param type
	 *            类型
	 * @param connection
	 *            数据库连接
	 * @return 业务id对象集合
	 * @throws Exception
	 */
	public List<Businessid> queryListForCondition(int siteId, String type, List<Integer> condition,Connection connection) throws Exception {
		if (null == connection) {
			throw new Exception("connection is null");
		}

		String sql = null;
		PreparedStatement preparedStatement = null;
		ResultSet resultSet = null;
		Businessid businessid = null;
		List<Businessid> businessIdList = null;
		try {
			businessIdList = new ArrayList<Businessid>();

			sql = "select * from businessid where siteid=? and type=? and idstatus=0 ";
			if(condition.size()!=0){
				for(Integer i :condition){
					sql+= " and idvalue != " +i;
				}
			}
			preparedStatement = connection.prepareStatement(sql);
			preparedStatement.setInt(1, siteId);
			preparedStatement.setString(2, type);
			resultSet = preparedStatement.executeQuery();

			while (resultSet.next()) {
				businessid = new Businessid();
				businessid.setId(resultSet.getInt("id"));
				businessid.setIdStatus(resultSet.getInt("idStatus"));
				businessid.setIdValue(resultSet.getInt("idvalue"));
				businessid.setSiteId(resultSet.getInt("siteId"));
				businessid.setType(resultSet.getString("type"));
				businessIdList.add(businessid);
			}

		} catch (Exception e) {
			throw e;
		} finally {
			if (resultSet != null) {
				try {
					resultSet.close();
				} catch (Exception e) {
					throw e;
				}
				resultSet = null;
			}
			if (preparedStatement != null) {
				try {
					preparedStatement.close();
				} catch (Exception e) {
					throw e;
				}
				preparedStatement = null;
			}
			sql = null;
			businessid = null;
		}
		return businessIdList;
	}
	
	/**
	 * 修改网元idvalue值对应的状态
	 * 
	 * @param connection
	 *            数据库连接
	 * @throws Exception
	 */
	public void updateBusinessidForSite(Businessid businessId, Connection connection) throws Exception {
		if (null == connection) {
			throw new Exception("connection is null");
		}

		String sql = null;
		PreparedStatement preparedStatement = null;
		try {
			sql = "update businessid set idStatus=? where siteId=? and type=?";
			preparedStatement = connection.prepareStatement(sql);
			preparedStatement.setInt(1, businessId.getIdStatus());
			preparedStatement.setInt(2, businessId.getSiteId());
			preparedStatement.setString(3, businessId.getType());
			preparedStatement.executeUpdate();

		} catch (Exception e) {
			throw e;
		} finally {
			if (preparedStatement != null) {
				try {
					preparedStatement.close();
				} catch (Exception e) {
					throw e;
				}
				preparedStatement = null;
			}
			sql = null;
		}
	}

	/**
	 * 查询该网元下已用的业务id
	 * @throws Exception 
	 */
	public int queryUsedIdCount(int siteId, Connection connection) throws Exception {
		if (null == connection) {
			throw new Exception("connection is null");
		}

		String sql = null;
		PreparedStatement preparedStatement = null;
		ResultSet resultSet = null;
		int count = 0;
		try {
			sql = "select * from businessid where siteid=? and idstatus=1";
			preparedStatement = connection.prepareStatement(sql);
			preparedStatement.setInt(1, siteId);
			resultSet = preparedStatement.executeQuery();
			while (resultSet.next()) {
				count++;
			}
		} catch (Exception e) {
			throw e;
		} finally {
			if (resultSet != null) {
				try {
					resultSet.close();
				} catch (Exception e) {
					throw e;
				}
				resultSet = null;
			}
			if (preparedStatement != null) {
				try {
					preparedStatement.close();
				} catch (Exception e) {
					throw e;
				}
				preparedStatement = null;
			}
		}
		return count;
	}
	
	/**
	 * 根据条件去查询
	 */
	public List<Businessid> queryByCondition(Businessid bId, Connection connection) throws Exception {
		if (null == connection) {
			throw new Exception("connection is null");
		}
		if (null == bId) {
			throw new Exception("condition is null");
		}

		String sql = null;
		PreparedStatement preparedStatement = null;
		ResultSet resultSet = null;
		Businessid businessid = null;
		List<Businessid> businessIdList = null;
		try {
			businessIdList = new ArrayList<Businessid>();
			sql = "select * from businessid where 1=1 ";
			if(bId.getSiteId() > 0){
				sql += "and siteid = " + bId.getSiteId();
			}
			if(bId.getType() != null){
				sql += " and type = '" + bId.getType()+"'";
			}
			if(bId.getIdStatus() >= 0){
				sql += " and idstatus = " + bId.getIdStatus();
			}
			if(bId.getIdValue() > 0){
				sql += " and idvalue = " + bId.getIdValue();
			}
			preparedStatement = connection.prepareStatement(sql);
			resultSet = preparedStatement.executeQuery();

			while (resultSet.next()) {
				businessid = new Businessid();
				businessid.setId(resultSet.getInt("id"));
				businessid.setIdStatus(resultSet.getInt("idStatus"));
				businessid.setIdValue(resultSet.getInt("idvalue"));
				businessid.setSiteId(resultSet.getInt("siteId"));
				businessid.setType(resultSet.getString("type"));
				businessIdList.add(businessid);
			}
		} catch (Exception e) {
			throw e;
		} finally {
			if (resultSet != null) {
				try {
					resultSet.close();
				} catch (Exception e) {
					throw e;
				}
				resultSet = null;
			}
			if (preparedStatement != null) {
				try {
					preparedStatement.close();
				} catch (Exception e) {
					throw e;
				}
				preparedStatement = null;
			}
		}
		return businessIdList;
	}
}
