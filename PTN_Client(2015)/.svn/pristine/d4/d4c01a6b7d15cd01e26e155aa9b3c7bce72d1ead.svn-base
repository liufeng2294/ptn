package com.nms.ui.ptn.business.qinq;

import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.util.ArrayList;
import java.util.List;

import javax.swing.BorderFactory;
import javax.swing.JButton;
import javax.swing.JPopupMenu;
import javax.swing.JSplitPane;
import javax.swing.JTabbedPane;
import javax.swing.SwingUtilities;

import twaver.table.TTable;
import twaver.table.TTablePopupMenuFactory;

import com.nms.db.bean.ptn.path.qinq.QinqInst;
import com.nms.ui.frame.ContentView;
import com.nms.ui.manager.ExceptionManage;
import com.nms.ui.manager.ResourceUtil;
import com.nms.ui.manager.keys.StringKeysPanel;
import com.nms.ui.manager.keys.StringKeysTab;
import com.nms.ui.ptn.business.topo.TopoPanel;
import com.nms.ui.ptn.safety.roleManage.RootFactory;

public class QinQBusinessPanel extends ContentView<QinqInst> {
	/**
	 * 
	 */
	private static final long serialVersionUID = 8573672821821114967L;
	private JSplitPane splitPane;
	private JTabbedPane tabbedPane;
	private QinqNetworkTablePanel qinqNetworkTablePanel;
	private TopoPanel topoPanel;
	//private static QinQBusinessPanel QinQBusinessPanel;
//	private Schematize schematize_panel = null;	//图形化显示界面

	public QinQBusinessPanel() {
		super("QinQBusinessTable",RootFactory.DEPLOY_MANAGE);
		init();
		//QinQBusinessPanel = this;
	}

//	public static QinQBusinessPanel getTunnelBusinessPanel() {
//		return QinQBusinessPanel;
//	}

	public void init() {
		getContentPanel().setBorder(BorderFactory.createTitledBorder(ResourceUtil.srcStr(StringKeysTab.TAB_QINQCONFIG)));
		initComponent();
		setLayout();
		setActionListention();
		try {
			getController().refresh();
		} catch (Exception e) {
			ExceptionManage.dispose(e,this.getClass());
		}
	}

	private void setActionListention() {
		getTable().addElementClickedActionListener(new ActionListener() {

			@Override
			public void actionPerformed(ActionEvent arg0) {
				if (getSelect() == null) {
					//清除详细面板数据
					topoPanel.clear();
					qinqNetworkTablePanel.clear();
//					schematize_panel.clear();
					return;
				} else {
					getController().initDetailInfo();
				}
			}
		});
	}

	private void initComponent() {
		tabbedPane = new JTabbedPane();
		splitPane = new JSplitPane(JSplitPane.VERTICAL_SPLIT);
		splitPane.setOrientation(JSplitPane.VERTICAL_SPLIT);
		splitPane.setOneTouchExpandable(true);
		int high = Double.valueOf(Toolkit.getDefaultToolkit().getScreenSize().getHeight()).intValue() / 2;
		splitPane.setDividerLocation(high - 65);
		splitPane.setTopComponent(this.getContentPanel());
		splitPane.setBottomComponent(tabbedPane);
		qinqNetworkTablePanel=new QinqNetworkTablePanel();
		topoPanel = new TopoPanel();
//		schematize_panel=new Schematize();
	}

	public void setTabbedPaneLayout() {
		tabbedPane.add(ResourceUtil.srcStr(StringKeysPanel.PANEL_TOPO_SHOW), topoPanel);
		tabbedPane.add(ResourceUtil.srcStr(StringKeysTab.TAB_ROUTE_INFO), qinqNetworkTablePanel);
//		tabbedPane.add(ResourceUtil.srcStr(StringKeysPanel.PANEL_SCHEMATIZE), this.schematize_panel);
	}

	public void setLayout() {
		setTabbedPaneLayout();
		GridBagLayout panelLayout = new GridBagLayout();
		this.setLayout(panelLayout);
		GridBagConstraints c = null;
		c = new GridBagConstraints();
		c.gridx = 0;
		c.gridy = 0;
		c.gridheight = 1;
		c.gridwidth = 1;
		c.weightx = 1.0;
		c.weighty = 1.0;
		c.fill = GridBagConstraints.BOTH;
		panelLayout.setConstraints(splitPane, c);
		this.add(splitPane);
	}

	@Override
	public void setTablePopupMenuFactory() {
		TTablePopupMenuFactory menuFactory = new TTablePopupMenuFactory() {
			@Override
			public JPopupMenu getPopupMenu(TTable ttable, MouseEvent evt) {
				if (SwingUtilities.isRightMouseButton(evt)) {
					int count = ttable.getSelectedRows().length;
					if (count == 1) {
						JPopupMenu menu = new JPopupMenu();
						menu.show(evt.getComponent(), evt.getX(), evt.getY());
						return menu;
					}
				}
				return null;
			}
		};
		super.setMenuFactory(menuFactory);
	}

	@Override
	public List<JButton> setNeedRemoveButtons() {
		List<JButton> needRemoveButtons = new ArrayList<JButton>();
		needRemoveButtons.add(getSynchroButton());
		needRemoveButtons.add(getSearchButton());
		return needRemoveButtons;
	}
	
	@Override
	public void setController() {
		controller = new QinQBusinessController(this);
	}

	public TopoPanel getTopoPanel() {
		return topoPanel;
	}

	public void setTopoPanel(TopoPanel topoPanel) {
		this.topoPanel = topoPanel;
	}
	
	public QinqNetworkTablePanel getQinqNetworkTablePanel() {
		return qinqNetworkTablePanel;
	}

	public void setQinqNetworkTablePanel(QinqNetworkTablePanel qinqNetworkTablePanel) {
		this.qinqNetworkTablePanel = qinqNetworkTablePanel;
	}
	
	
}
