package com.nms.model.ptn;

import java.sql.Connection;
import java.util.ArrayList;
import java.util.List;

import com.nms.db.bean.ptn.L2cpInfo;
import com.nms.db.dao.ptn.L2CPDao;
import com.nms.model.util.ObjectService;

public class L2CPService extends ObjectService{

	public void setConnection(Connection connection){
		super.connection = connection;
	}
	
	public void setPtnuser(String ptnUser){
		super.ptnuser = ptnUser;
	}
	
	private L2CPDao l2cpInfoDao = new L2CPDao();
	
	/**
	 * 保存
	 * @param l2cpInfo
	 * @throws Exception
	 */
	public void save(L2cpInfo l2cpInfo) throws Exception{
		if(l2cpInfo == null){
			throw new Exception("l2cpInfo is null");
		}
		try {
			connection.setAutoCommit(false);
			l2cpInfoDao.insert(l2cpInfo, connection);
			if(!connection.getAutoCommit()){
				connection.commit();
			}
		} catch (Exception e) {
			connection.rollback();
		}finally{
			connection.setAutoCommit(true);
		}
	}
	
	/**
	 * 通过网元查询所有的该网元的数据
	 * @param siteId
	 * @return
	 * @throws Exception
	 */
	public List<L2cpInfo> selectAll(int siteId) throws Exception{
		List<L2cpInfo> L2cpInfoList= new ArrayList<L2cpInfo>();
		if(siteId == 0){
			throw new Exception("siteId is null");
		}
		try {
			connection.setAutoCommit(false);
			L2cpInfoList = l2cpInfoDao.queryByCondition(siteId, connection);
			if(!connection.getAutoCommit()){
				connection.commit();
			}
		} catch (Exception e) {
			connection.rollback();
		}finally{
			connection.setAutoCommit(true);
		}
		return L2cpInfoList;
	}
	//跟新数据
	public void update(L2cpInfo l2cpInfo)throws Exception{
		if(l2cpInfo == null){
			throw new Exception("l2cpInfo is null");
		}
		try {
			connection.setAutoCommit(false);
			l2cpInfoDao.update(l2cpInfo, connection);
			if(!connection.getAutoCommit()){
				connection.commit();
			}
		} catch (Exception e) {
			connection.rollback();
		}finally{
			connection.setAutoCommit(true);
		}
	}
	/*
	 * 删除数据
	 * 
	 */
	public void delete(L2cpInfo l2cpInfo)throws Exception{
		if(l2cpInfo == null){
			throw new Exception("l2cpInfo is null");
		}
		try {
			connection.setAutoCommit(false);
			l2cpInfoDao.update(l2cpInfo, connection);
			if(!connection.getAutoCommit()){
				connection.commit();
			}
		} catch (Exception e) {
			connection.rollback();
		}finally{
			connection.setAutoCommit(true);
		}
	}
	
	
	/*
	 * 根据网元ID删除数据
	 * 
	 */
	public void delete(int siteId)throws Exception{
		if(siteId == 0){
			throw new Exception("siteId is null");
		}
		try {
			connection.setAutoCommit(false);
			l2cpInfoDao.delete(siteId, connection);
			if(!connection.getAutoCommit()){
				connection.commit();
			}
		} catch (Exception e) {
			connection.rollback();
		}finally{
			connection.setAutoCommit(true);
		}
	}
}
