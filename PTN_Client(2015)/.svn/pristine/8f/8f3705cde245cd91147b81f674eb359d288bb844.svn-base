package com.nms.db.dao.system;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;

import com.nms.db.bean.system.UserDesginInfo;
import com.nms.ui.manager.ExceptionManage;

public class UserDesginDao {
	/**
	 * 新增UserDesginInfo
	 * @param userDesginfo 实体
	 * @param connection数据库连接
	 * @return 插入的记录数
	 * @throws Exception
	 */
	public int insert(UserDesginInfo userDesginfo, Connection connection)
			throws Exception {

		if (null == userDesginfo) {
			throw new Exception("userDesginfo is null");
		}

		if (null == connection) {
			throw new Exception("connection is null");
		}

		String sql = null;
		PreparedStatement preparedStatement = null;
		int result = 0;

		try {
			sql = "insert into UserDesgin(isLockSelect,timeValue,user_name) values(?,?,?)";
			preparedStatement = connection.prepareStatement(sql);
			preparedStatement.setInt(1, userDesginfo.getIsSelect());
			preparedStatement.setString(2,userDesginfo.getMinute());
			preparedStatement.setString(3,userDesginfo.getUserName());

			result = preparedStatement.executeUpdate();

		} catch (Exception e) {
			throw e;
		} finally {

			if (preparedStatement != null) {
				try {
					preparedStatement.close();
				} catch (Exception e) {
					ExceptionManage.dispose(e,this.getClass());
				}
				preparedStatement = null;
			}

			sql = null;
		}

		return result;
	}

	/**
	 * 修改UserDesginInfo userDesginfo
	 * @param udaGroup 实体
	 * @param connection 数据库连接
	 * @return 插入的记录数
	 * @throws Exception
	 */
	public int update(UserDesginInfo userDesginfo, Connection connection)
			throws Exception {
		if (null == userDesginfo) {
			throw new Exception("userDesginfo is null");
		}

		if (null == connection) {
			throw new Exception("connection is null");
		}

		String sql = null;
		PreparedStatement preparedStatement = null;
		int result = 0;

		try {
			sql = "update UserDesgin set isLockSelect=?,timeValue=?,user_name=? where id=?";
			preparedStatement = connection.prepareStatement(sql);
			preparedStatement.setInt(1,userDesginfo.getIsSelect());
			preparedStatement.setString(2,userDesginfo.getMinute());
			preparedStatement.setString(3,userDesginfo.getUserName());
			preparedStatement.setInt(4,userDesginfo.getId());
			result = preparedStatement.executeUpdate();
		} catch (Exception e) {
			throw e;
		} finally {

			if (preparedStatement != null) {
				try {
					preparedStatement.close();
				} catch (Exception e) {
					ExceptionManage.dispose(e,this.getClass());
				}
				preparedStatement = null;
			}
			sql = null;
		}

		return result;
	}

	/**
	 * 通过主键删除UserDesgin
	 * @param id 主键
	 * @param connection 数据库连接
	 * @return 删除记录数
	 * @throws Exception
	 */
	public int delete(int id, Connection connection) throws Exception {
		if (null == connection) {
			throw new Exception("connection is null");
		}

		String sql = null;
		PreparedStatement preparedStatement = null;
		int result = 0;
		try {
			sql = "delete from UserDesgin where id=?";
			preparedStatement = connection.prepareStatement(sql);
			preparedStatement.setInt(1, id);

			result = preparedStatement.executeUpdate();

		} catch (Exception e) {
			throw e;
		} finally {

			if (preparedStatement != null) {
				try {
					preparedStatement.close();
				} catch (Exception e) {
					ExceptionManage.dispose(e,this.getClass());
				}
				preparedStatement = null;
			}
			sql = null;
		}

		return result;
	}

   /**
    * 根据条件查询UserDesginInfo userDesginfo
    * @param udagroupCondition 查询条件
    * @param connection 数据库连接
    * @return UdaGroup集合
    * @throws Exception
    */
	public UserDesginInfo queryByCondition(String userName,Connection connection) throws Exception {

		if (null == connection) {
			throw new Exception("connection is null");
		}
		UserDesginInfo userDesginInfo=null;
		String sql = null;
		ResultSet resultSet = null;
		PreparedStatement preparedStatement = null;

		try {
			userDesginInfo = new UserDesginInfo();
			sql = "select id,isLockSelect,timeValue,user_name from UserDesgin where user_name = ?";
			preparedStatement = connection.prepareStatement(sql);
			preparedStatement.setString(1, userName);
			resultSet = preparedStatement.executeQuery();

			while (resultSet.next()) {
				userDesginInfo.setId(resultSet.getInt("id"));
				userDesginInfo.setIsSelect(resultSet.getInt("isLockSelect"));
				userDesginInfo.setMinute(resultSet.getString("timeValue"));
				userDesginInfo.setUserName(resultSet.getString("user_name"));
			}

		} catch (Exception e) {
			throw e;
		} finally {
			if (resultSet != null) {
				try {
					resultSet.close();
				} catch (Exception e) {
					ExceptionManage.dispose(e,this.getClass());
				}
				resultSet = null;
			}
			if (preparedStatement != null) {
				try {
					preparedStatement.close();
				} catch (Exception e) {
					ExceptionManage.dispose(e,this.getClass());
				}
				preparedStatement = null;
			}
			sql = null;
		}
		return userDesginInfo;
	}
}
