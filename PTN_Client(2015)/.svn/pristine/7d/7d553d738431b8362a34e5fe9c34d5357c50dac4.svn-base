package com.nms.model.ptn.path.eth;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.apache.ibatis.session.SqlSession;
import com.nms.db.bean.ptn.path.eth.EtreeInfo;
import com.nms.db.dao.ptn.path.eth.EtreeInfoMapper;
import com.nms.model.util.ObjectService_Mybatis;
import com.nms.ui.manager.ExceptionManage;

public class EtreeInfoService_MB extends ObjectService_Mybatis{
	public void setPtnuser(String ptnuser) {
		super.ptnuser = ptnuser;
	}

	public void setSqlSession(SqlSession sqlSession) {
		super.sqlSession = sqlSession;
	}
	
	private EtreeInfoMapper mapper;

	public EtreeInfoMapper getEtreeInfoMapper() {
		return mapper;
	}

	public void setEtreeInfoMapper(EtreeInfoMapper EtreeInfoMapper) {
		this.mapper = EtreeInfoMapper;
	}

	/**
	 * @throws Exception
	 */
	public Map<Integer, List<EtreeInfo>> selectBySiteAndisSingle(EtreeInfo condition) throws Exception {
		return this.convertListToMap(this.mapper.selectBySiteAndisSingle(condition));
	}
	
	/**
	 * 把所有etree按组转为map 
	 * @param etreeInfoList
	 * @return key为组id  value为此组下的etree对象
	 * @throws Exception
	 */
	private Map<Integer, List<EtreeInfo>> convertListToMap(List<EtreeInfo> etreeInfoList) {
		Map<Integer, List<EtreeInfo>> etreeInfoMap = new HashMap<Integer, List<EtreeInfo>>();
		try {
			if(null!=etreeInfoList && etreeInfoList.size()>0){
				for (EtreeInfo etreeInfo : etreeInfoList) {
					int serviceId = etreeInfo.getServiceId();
					if (etreeInfoMap.get(serviceId) == null) {
						List<EtreeInfo> etreeInfoList_map = new ArrayList<EtreeInfo>();
						etreeInfoMap.put(serviceId, etreeInfoList_map);
					}
					etreeInfoMap.get(serviceId).add(etreeInfo);
				}
			}
		} catch (Exception e) {
			ExceptionManage.dispose(e, this.getClass());
		}
		return etreeInfoMap;
	}
	
	/**
	 * 查询所有业务
	 * 
	 * @param serviceId
	 * @return
	 */
	public List<EtreeInfo> selectAll(int serviceType,String name) {
		List<EtreeInfo> etreeInfoList = null;
		try {
		   etreeInfoList = new ArrayList<EtreeInfo>();
		   etreeInfoList = this.mapper.queryAllEtree(serviceType,name);		
		} catch (Exception e) {
			ExceptionManage.dispose(e, getClass());
		}
		return etreeInfoList;
	}
	
	/**
	 * 查询所有业务
	 * 
	 * @param serviceId,name,brabchSite
	 * @return
	 */
	public List<EtreeInfo> selectAcIds(int serviceType,String name,int branchSite) {
		List<EtreeInfo> etreeInfoList = null;    
		try {
		   etreeInfoList = new ArrayList<EtreeInfo>();
		   etreeInfoList = this.mapper.queryAllEtrees(serviceType,name,branchSite);		
		} catch (Exception e) {
			ExceptionManage.dispose(e, getClass());
		}
		return etreeInfoList;
	}
	
}
