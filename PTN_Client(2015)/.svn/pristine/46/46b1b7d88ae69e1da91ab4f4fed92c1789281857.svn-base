package com.nms.model.system;

import java.util.ArrayList;
import java.util.List;
import org.apache.ibatis.session.SqlSession;
import com.nms.db.bean.equipment.shelf.SiteInst;
import com.nms.db.bean.system.SiteLock;
import com.nms.db.dao.system.SiteLockMapper;
import com.nms.model.util.ObjectService_Mybatis;
import com.nms.ui.manager.ExceptionManage;


public class SiteLockService_MB extends ObjectService_Mybatis {

    private SiteLockMapper mapper = null;
	
	public void setPtnuser(String ptnuser) {
		super.ptnuser = ptnuser;
	}

	public void setSqlSession(SqlSession sqlSession) {
		super.sqlSession = sqlSession;
	}
	
	public SiteLockMapper getMapper() {
		return mapper;
	}

	public void setMapper(SiteLockMapper mapper) {
		this.mapper = mapper;
	}

	/**
	 * 批量插入
	 * @param siteIdList
	 * @throws Exception 
	 */
	public void save(List<Integer> siteIdList,String lockType) throws Exception{
//		SiteLock siteLock=null;
//		try {
//			connection.setAutoCommit(false);
//			for(int siteId : siteIdList){
//				siteLock=new SiteLock();
//				siteLock.setSiteId(siteId);
//				siteLock.setLockDate(DateUtil.getDate(DateUtil.FULLTIME));
//				siteLock.setLockType(lockType);
//				//TODO user
//				siteLock.setLockUser("admin");
//				siteLockDao.insert(siteLock, connection);
//			}
//			if(!connection.getAutoCommit()){
//				connection.commit();
//			}
//		} catch (Exception e) {
//			connection.rollback();
//			ExceptionManage.dispose(e,this.getClass());
//		}finally{
//			connection.setAutoCommit(true);
//			siteLock=null;
//		}
	}
	
	/**
	 * 批量解锁
	 * @param siteIdList
	 * @throws Exception 
	 */
	public void updateClear(List<Integer> siteIdList) throws Exception{
//		try {
//			connection.setAutoCommit(false);
//			for(int siteId : siteIdList){
//				this.siteLockDao.updateSiteLock(siteId, DateUtil.getDate(DateUtil.FULLTIME), connection);
//			}
//			if(!connection.getAutoCommit()){
//				connection.commit();
//			}
//		} catch (Exception e) {
//			connection.rollback();
//			ExceptionManage.dispose(e,this.getClass());
//		}finally{
//			connection.setAutoCommit(true);
//		}
	}
	
	/**
	 * 强制解锁
	 * @throws Exception 
	 */
	public void updateForce(int id) throws Exception{
//		try {
//			//TODO user
//			this.siteLockDao.updateForce(id, ConstantUtil.user.getUser_Name(), DateUtil.getDate(DateUtil.FULLTIME), connection);
//		} catch (Exception e) {
//			ExceptionManage.dispose(e,this.getClass());
//		}
	}
	
	/**
	 * 暂时去掉是否被锁，以后完善
	 * @param siteId
	 * @return false 没锁  true有锁
	 * @throws Exception 
	 */
	public boolean isLock(int siteId) throws Exception{
		
//		List<SiteLock> siteLockList=null;
//		boolean flag=false;
//		try {
//			siteLockList=this.siteLockDao.query(siteId, connection);
//			if(siteLockList!=null && siteLockList.size()>0){
//				flag = true;
//			}else{
//				flag = false;
//			}
//		} catch (Exception e) {
//			ExceptionManage.dispose(e,this.getClass());
//		}finally{
//			siteLockList=null;
//		}
//		return flag;
		
		return false;
	}
	
	/**
	 * 查询单个网元下的锁信息
	 * @param siteInst
	 * @return 锁信息
	 * @throws Exception
	 */
	public List<SiteLock> selectBySiteId(SiteInst siteInst)throws Exception{
		List<SiteLock> siteLocks = null;
//		try {
//			siteLocks = this.siteLockDao.selectBySiteId(siteInst.getSite_Inst_Id(), connection);
//		} catch (Exception e) {
//			ExceptionManage.dispose(e,this.getClass());
//		}
		return siteLocks;
	}

	/**
	 * 查询单个网元下被锁的信息
	 * @param siteInst
	 * @return 一条siteLock
	 * @throws Exception
	 */
	public List<SiteLock> selectSiteLock(SiteInst siteInst)throws Exception {
		List<SiteLock> siteLocks = null;
		try {
			siteLocks = new ArrayList<SiteLock>();
			siteLocks = this.mapper.queryLockBySiteId(siteInst.getSite_Inst_Id());
		} catch (Exception e) {
			ExceptionManage.dispose(e,this.getClass());
		}
		return siteLocks;
	}
	
	/**
	 * 查询多个网元下的被锁的信息
	 * @param siteIdList
	 * @return
	 * @throws Exception
	 */
	public List<SiteLock> selectAllSiteLock(List<Integer> siteIdList)throws Exception {
		List<SiteLock> siteLocks = new ArrayList<SiteLock>();
////		SiteLock siteLock = null;
//		try {
//			connection.setAutoCommit(false);
//			for(int siteId : siteIdList){
////				siteLock=new SiteLock();
////				siteLock.setSiteId(siteId);
//				List<SiteLock> siteList = siteLockDao.query(siteId, connection);
//				if(siteList.size()>0){
//				siteLocks.add(siteList.get(0));
//				}
//			}
//			if(!connection.getAutoCommit()){
//				connection.commit();
//			}
//		} catch (Exception e) {
//			connection.rollback();
//			ExceptionManage.dispose(e,this.getClass());
//		}finally{
//			connection.setAutoCommit(true);
//		}
		return siteLocks;
	}
}
