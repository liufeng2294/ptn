package com.nms.db.dao.ptn;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.List;

import com.nms.db.bean.ptn.RouteBusiness;
/**
 * 查询路由业务数据访问层
 * @author dzy
 *
 */
public class RouteBusinessDao {
	/**
	 * 查询sql语句
	 */
	private final String SELECT_SQL ="SELECT * FROM ( SELECT ti.busiId AS 'busiId', ti. NAME AS 'name', ti.activestatus AS 'activeStatus', ti.type AS 'type', asi.CellId AS 'aSiteName', zsi.CellId AS 'zSiteName', ap.portName AS 'aPortName', zp.portName AS 'zPortName', ti.isSingle AS 'isSingle', ti.createTime AS 'createTime', ti.tunnelId FROM ( SELECT t.tunnelId AS 'busiId', t.tunnelName AS 'name', t.tunnelStatus AS 'activeStatus', '4' AS 'type', t.aSiteId AS 'aSiteId', t.zSiteId AS 'zSiteId', t.aPortId AS 'aPortId', t.zportid AS 'zPortId', t.isSingle AS 'isSingle', t.createTime AS 'createTime', t.tunnelId FROM tunnel t UNION ALL SELECT pwId AS 'busiId', pw.pwName AS 'name', pw.pwStatus AS 'activeStatus', '5' AS 'type', pw.aSiteId AS 'aSiteId', pw.zSiteId AS 'zSiteId', CASE WHEN t.aSiteId = pw.aSiteId THEN t.aPortId ELSE t.zPortId END AS 'aPortId', CASE WHEN t.aSiteId = pw.aSiteId THEN t.zPortId ELSE t.aPortId END AS 'zPortId', pw.isSingle AS 'isSingle', pw.createTime AS 'createTime', t.tunnelId FROM pwinfo pw, tunnel t WHERE t.tunnelId = pw.tunnelId ) AS ti, port_inst ap, port_inst zp, site_inst asi, site_inst zsi WHERE ti.aSiteId = asi.site_inst_id AND ti.zSiteId = zsi.site_inst_id AND ti.aPortId = ap.portId AND ti.zPortId = zp.portId UNION ALL SELECT s.id AS 'busiId', s.`name` AS 'name', s.activeStatus AS 'activeStatus', s.serviceType AS 'type', ast.CellId AS 'aSiteName', zst.CellId AS 'zSiteName', CASE WHEN s.cestype = 2 OR s.cestype = 4 THEN ( SELECT portname FROM port_inst WHERE portId = s.aAcId ) ELSE ( SELECT timeslotnumber FROM port_stm_timeslot WHERE id = s.aAcId ) END AS 'aPortName', CASE WHEN s.cestype = 2 OR s.cestype = 5 THEN ( SELECT portname FROM port_inst WHERE portId = s.zAcId ) ELSE ( SELECT timeslotnumber FROM port_stm_timeslot WHERE id = s.zAcId ) END AS 'zPortName', s.isSingle AS 'isSingle', s.createTime AS 'createTime', t.tunnelId FROM serviceinfo s, tunnel t, pwinfo p, site_inst ast, site_inst zst WHERE s.pwId = p.pwId AND p.tunnelId = t.tunnelId AND s.serviceType = 0 AND s.aSiteId = ast.site_inst_id AND s.zSiteId = zst.site_inst_id UNION ALL SELECT line.id AS 'busiId', line.`name` AS 'name', line.activeStatus AS 'activeStatus', line.serviceType AS 'type', ast.CellId AS 'aSiteName', zst.CellId AS 'zSiteName', aac. NAME AS 'aPortName', zac. NAME AS 'zPortName', line.isSingle AS 'isSingle', line.createTime AS 'createTime', t.tunnelId FROM serviceinfo line, pwinfo p, tunnel t, acinfo aac, acinfo zac, site_inst ast, site_inst zst WHERE line.pwId = p.pwId AND p.tunnelId = t.tunnelId AND line.serviceType = 1 AND line.aAcId = aac.id AND line.zAcId = zac.id AND line.aSiteId = ast.site_inst_id AND line.zSiteId = zst.site_inst_id UNION ALL SELECT ssr.serviceId AS 'busiId', ssr. NAME AS 'name', ssr.activeStatus AS 'activeStatus', ssr.serviceType AS 'type', ssr.siteSel AS 'aSiteId', group_concat( DISTINCT concat_ws( ',', CASE WHEN ssr.zSiteName = ssr.siteSel THEN ssr.aSiteName WHEN ssr.aSiteName = ssr.siteSel THEN ssr.zSiteName END )) AS 'zSiteId', CASE WHEN ssr.aSiteName = ssr.siteSel THEN ssr.aPortName WHEN ssr.zSiteName = ssr.siteSel THEN ssr.zPortName END AS 'aPortId', group_concat( DISTINCT concat_ws( ',', CASE WHEN ssr.aSiteName = ssr.siteSel THEN ssr.zPortName WHEN ssr.zSiteName = ssr.siteSel THEN ssr.aPortName END )) AS 'zPortId', ssr.isSingle, ssr.createTime, Group_concat(p.tunnelId) AS 'tunnelId' FROM pwinfo p, ( SELECT si.serviceId, si. NAME AS 'name', si.activeStatus AS 'activeStatus', si.serviceType AS 'serviceType', ast.CellId AS 'aSiteName', zst.CellId AS 'zSiteName', aac. NAME AS 'aPortName', zac. NAME AS 'zPortName', si.isSingle AS 'isSingle', si.createTime AS 'createTime', si.pwId, stSel.CellId AS 'siteSel' FROM serviceinfo si, site_inst ast, site_inst zst, site_inst stSel, acinfo aac, acinfo zac WHERE si.serviceType = 3 AND si.rootSite = ast.site_inst_id AND si.branchSite = zst.site_inst_id AND si.aAcId = aac.id AND si.zAcId = zac.id AND stSel.CellId = ? AND ( ast.CellId = stSel.CellId OR zst.CellId = stSel.CellId )) ssr WHERE ssr.pwid = p.pwId GROUP BY ssr.serviceId UNION ALL SELECT ssr.serviceId AS 'busiId', ssr. NAME AS 'name', ssr.activeStatus AS 'activeStatus', ssr.serviceType AS 'type', ssr.SiteNameSel AS 'aSiteName', group_concat( DISTINCT concat_ws( ',', CASE WHEN ssr.zSiteName != ssr.SiteNameSel THEN ssr.zSiteName WHEN ssr.aSiteName != ssr.SiteNameSel THEN ssr.aSiteName END )) AS 'zSiteName', ssr.acIdSel AS 'aPortName', group_concat( DISTINCT concat_ws( ',', CASE WHEN ssr.aAcId != ssr.acIdSel THEN ssr.aAcId WHEN ssr.zAcId != ssr.acIdSel THEN ssr.zAcId END )) AS 'zPortName', ssr.isSingle, ssr.createTime, Group_concat(DISTINCT p.tunnelId) AS 'tunnelId' FROM pwinfo p, ( SELECT DISTINCT si.serviceId, si. NAME AS 'name', si.activeStatus AS 'activeStatus', si.serviceType AS 'serviceType', ast.CellId AS 'aSiteName', zst.CellId AS 'zSiteName', aac. NAME AS 'aAcId', zac. NAME AS 'zAcId', si.isSingle AS 'isSingle', si.createTime AS 'createTime', si.pwId AS 'pwId', ss.aSiteName AS 'siteNameSel', acSel. NAME AS 'acIdSel' FROM serviceinfo si, site_inst ast, site_inst zst, acinfo aac, acinfo zac, acinfo acSel, ( SELECT DISTINCT si.serviceId, CASE WHEN ast.CellId = ? THEN ast.CellId ELSE zst.CellId END AS 'aSiteName', CASE WHEN ast.CellId = ? THEN si.aacid ELSE si.zacid END AS 'acId' FROM serviceinfo si, site_inst ast, site_inst zst WHERE si.serviceType = 2 AND si.aSiteId = ast.site_inst_id AND si.zSiteId = zst.site_inst_id AND ( ast.CellId = ? OR zst.cellid = ? )) ss WHERE si.serviceType = 2 AND si.serviceId = ss.serviceId AND si.aSiteId = ast.site_inst_id AND si.zSiteId = zst.site_inst_id AND aac.id = si.aAcId AND zac.id = si.zAcId AND ss.acId = acSel.id ) ssr WHERE ssr.pwid = p.pwId GROUP BY ssr.serviceId ) tt WHERE tt.isSingle = 0 ";
	
	private final String SELECTXC_SQL ="SELECT * FROM ( SELECT ti.busiId AS 'busiId', ti. NAME AS 'name', ti.activestatus AS 'activeStatus', ti.type AS 'type', asi.CellId AS 'aSiteName', zsi.CellId AS 'zSiteName', ap.portName AS 'aPortName', zp.portName AS 'zPortName', ti.isSingle AS 'isSingle', ti.createTime AS 'createTime', ti.tunnelName FROM ( SELECT t.tunnelId AS 'busiId', t.tunnelName AS 'name', t.tunnelStatus AS 'activeStatus', '4' AS 'type', t.aSiteId AS 'aSiteId', t.zSiteId AS 'zSiteId', t.aPortId AS 'aPortId', t.zportid AS 'zPortId', t.isSingle AS 'isSingle', t.createTime AS 'createTime', t.tunnelName FROM tunnel t UNION ALL SELECT pwId AS 'busiId', pw.pwName AS 'name', pw.pwStatus AS 'activeStatus', '5' AS 'type', pw.aSiteId AS 'aSiteId', pw.zSiteId AS 'zSiteId', CASE WHEN t.aSiteId = pw.aSiteId THEN t.aPortId ELSE t.zPortId END AS 'aPortId', CASE WHEN t.aSiteId = pw.aSiteId THEN t.zPortId ELSE t.aPortId END AS 'zPortId', pw.isSingle AS 'isSingle', pw.createTime AS 'createTime', t.tunnelName FROM pwinfo pw, tunnel t WHERE t.tunnelId = pw.tunnelId ) AS ti, port_inst ap, port_inst zp, site_inst asi, site_inst zsi WHERE ti.aSiteId = asi.site_inst_id AND ti.zSiteId = zsi.site_inst_id AND ti.aPortId = ap.portId AND ti.zPortId = zp.portId UNION ALL SELECT s.id AS 'busiId', s.`name` AS 'name', s.activeStatus AS 'activeStatus', s.serviceType AS 'type', ast.CellId AS 'aSiteName', zst.CellId AS 'zSiteName', CASE WHEN s.cestype = 2 OR s.cestype = 4 THEN ( SELECT portname FROM port_inst WHERE portId = s.aAcId ) ELSE ( SELECT timeslotnumber FROM port_stm_timeslot WHERE id = s.aAcId ) END AS 'aPortName', CASE WHEN s.cestype = 2 OR s.cestype = 5 THEN ( SELECT portname FROM port_inst WHERE portId = s.zAcId ) ELSE ( SELECT timeslotnumber FROM port_stm_timeslot WHERE id = s.zAcId ) END AS 'zPortName', s.isSingle AS 'isSingle', s.createTime AS 'createTime', t.tunnelName FROM serviceinfo s, tunnel t, pwinfo p, site_inst ast, site_inst zst WHERE s.pwId = p.pwId AND p.tunnelId = t.tunnelId AND s.serviceType = 0 AND s.aSiteId = ast.site_inst_id AND s.zSiteId = zst.site_inst_id UNION ALL SELECT line.id AS 'busiId', line.`name` AS 'name', line.activeStatus AS 'activeStatus', line.serviceType AS 'type', ast.CellId AS 'aSiteName', zst.CellId AS 'zSiteName', aac. NAME AS 'aPortName', zac. NAME AS 'zPortName', line.isSingle AS 'isSingle', line.createTime AS 'createTime', t.tunnelName FROM serviceinfo line, pwinfo p, tunnel t, acinfo aac, acinfo zac, site_inst ast, site_inst zst WHERE line.pwId = p.pwId AND p.tunnelId = t.tunnelId AND line.serviceType = 1 AND line.aAcId = aac.id AND line.zAcId = zac.id AND line.aSiteId = ast.site_inst_id AND line.zSiteId = zst.site_inst_id UNION ALL SELECT ssr.serviceId AS 'busiId', ssr. NAME AS 'name', ssr.activeStatus AS 'activeStatus', ssr.serviceType AS 'type', ssr.aSiteName AS 'aSiteId', Group_concat(ssr.zSiteName) AS 'zSiteId', ssr.aPortName AS 'aPortId', Group_concat(ssr.zPortName) AS 'zPortId', ssr.isSingle, ssr.createTime, Group_concat(t.tunnelName) AS 'tunnelId' FROM pwinfo p, tunnel t, ( SELECT si.serviceId, si. NAME AS 'name', si.activeStatus AS 'activeStatus', si.serviceType AS 'serviceType', ast.CellId AS 'aSiteName', zst.CellId AS 'zSiteName', aac. NAME AS 'aPortName', zac. NAME AS 'zPortName', si.isSingle AS 'isSingle', si.createTime AS 'createTime', si.pwId FROM serviceinfo si, site_inst ast, site_inst zst, acinfo aac, acinfo zac WHERE si.serviceType = 3 AND si.rootSite = ast.site_inst_id AND si.branchSite = zst.site_inst_id AND si.aAcId = aac.id AND si.zAcId = zac.id ) ssr WHERE ssr.pwid = p.pwId AND p.tunnelId = t.tunnelId GROUP BY ssr.serviceId UNION ALL SELECT s.serviceId AS 'busiId', s. NAME AS 'name', s.activeStatus AS 'activeStatus', s.serviceType AS 'type', '' AS 'aSiteName', '' AS 'zSiteName', '' AS 'aPortName', '' AS 'zPortName', s.isSingle, s.createTime, Group_concat(t.tunnelName) AS 'tunnelId' FROM serviceinfo s, pwinfo p, tunnel t WHERE s.pwId = p.pwId AND p.tunnelId = t.tunnelId AND s.serviceType = 2 GROUP BY s.serviceId ) tt, ( SELECT t.tunnelName AS tunnelName_lsp, COUNT(l.tunnelId) 'count' FROM ( SELECT * FROM `lspinfo` WHERE aSiteId = ? OR zSiteId = ? ) l, tunnel t WHERE l.tunnelId = t.tunnelId GROUP BY l.tunnelId ) tnId WHERE tt.isSingle = 0 AND tnId.count > 1 AND tt.tunnelName IN (tnId.tunnelName_lsp)";
	/**
	 * 通过网元名称查询路由业务信息
	 * 
	 * @param siteName  网元名称
	 * @param connection 数据库连接
	 * @return 查询得到的结果集
	 * @throws Exception
	 */
	public List<RouteBusiness> queryBySiteName(String siteName, Connection connection) throws Exception {
		if (null == siteName) {
			throw new Exception("siteName is null");
		}
		if (null == connection) {
			throw new Exception("conection is null");
		}

		PreparedStatement preparedStatement = null;
		StringBuffer stringBuffer = null; // sql语句
		List<Object> paramList = null; // 查询参数集合
		List<RouteBusiness> routeBusinessList = null;
		try {
			paramList = new ArrayList<Object>();
			stringBuffer = new StringBuffer(this.SELECT_SQL);
		
			// 根据条件拼接sql语句
			if (null!=siteName&&!"".equals(siteName)) {
				stringBuffer.append(" AND (tt.aSiteName = ? OR tt.zSiteName = ? OR tt.zSiteName LIKE ? OR tt.zSiteName LIKE ? OR instr(tt.aSiteName, ?) > 0 )");
				for (int i = 0; i < 7; i++) {
					paramList.add(siteName);
				}
				paramList.add(siteName+",%"); //多个网元以siteName开头
				paramList.add("%,"+siteName);//多个网元以siteName结尾
				paramList.add(","+siteName+",");//多个网元中包含 siteName 网元
			}
			preparedStatement = connection.prepareStatement(stringBuffer.toString());
			// 添加参数
			if (paramList.size() > 0) {
				for (int i = 0; i < paramList.size(); i++) {
					preparedStatement.setObject(i + 1, paramList.get(i));
				}
			}

			routeBusinessList = this.executeQuery(preparedStatement);

		} catch (Exception e) {
			throw e;
		} finally {
			if (preparedStatement != null) {
				try {
					preparedStatement.close();
				} catch (Exception e) {
					throw e;
				}
				preparedStatement = null;
			}
			stringBuffer = null; // sql语句
			paramList = null; // 查询参数集合
		}
		return routeBusinessList;
	}
	
	
	/**
	 * 通过网元名称查询经过路由业务信息
	 * 
	 * @param siteName  网元名称
	 * @param connection 数据库连接
	 * @return 查询得到的结果集
	 * @throws Exception
	 */
	public List<RouteBusiness> queryBySiteName_XC(int siteId, Connection connection) throws Exception {
		if (null == connection) {
			throw new Exception("conection is null");
		}

		PreparedStatement preparedStatement = null;
		StringBuffer stringBuffer = null; // sql语句
		List<Object> paramList = null; // 查询参数集合
		List<RouteBusiness> routeBusinessList = null;
		try {
			paramList = new ArrayList<Object>();
			stringBuffer = new StringBuffer(this.SELECTXC_SQL);
		
			// 根据条件拼接sql语句
			if (0!=siteId) {
				paramList.add(siteId);  //经过网元ID
				paramList.add(siteId);	//经过网元ID
			}
			preparedStatement = connection.prepareStatement(stringBuffer.toString());
			// 添加参数
			if (paramList.size() > 0) {
				for (int i = 0; i < paramList.size(); i++) {
					preparedStatement.setObject(i + 1, paramList.get(i));
				}
			}

			routeBusinessList = this.executeQuery(preparedStatement);

		} catch (Exception e) {
			throw e;
		} finally {
			if (preparedStatement != null) {
				try {
					preparedStatement.close();
				} catch (Exception e) {
					throw e;
				}
				preparedStatement = null;
			}
			stringBuffer = null; // sql语句
			paramList = null; // 查询参数集合
		}
		return routeBusinessList;
	}
	
	
	/**
	 * 执行sql语句 返回结果集
	 * 
	 * @param preparedStatement
	 * @return
	 * @throws Exception
	 */
	private List<RouteBusiness> executeQuery(PreparedStatement preparedStatement) throws Exception {

		if (null == preparedStatement) {
			throw new Exception("preparedStatement is null");
		}
		ResultSet resultSet = null;
		List<RouteBusiness> routeBusinessList = null;
		RouteBusiness routeBusiness = null;
		try {
			routeBusinessList = new ArrayList<RouteBusiness>();

			resultSet = preparedStatement.executeQuery();

			while (resultSet.next()) {
				routeBusiness = new RouteBusiness();
				routeBusiness.setBusiId(resultSet.getInt("busiId"));
				routeBusiness.setName(resultSet.getString("name"));
				routeBusiness.setActiveStatus(resultSet.getInt("activeStatus"));
				routeBusiness.setType(resultSet.getInt("type"));
				routeBusiness.setaSiteName(resultSet.getString("aSiteName"));
				routeBusiness.setzSiteName(resultSet.getString("zSiteName"));
				routeBusiness.setaPortName(resultSet.getString("aPortName"));
				routeBusiness.setzPortName(resultSet.getString("zPortName"));
				routeBusiness.setCreateTime(resultSet.getString("createTime"));
				routeBusinessList.add(routeBusiness);
			}
		} catch (Exception e) {
			throw e;
		} finally {
			if (resultSet != null) {
				try {
					resultSet.close();
				} catch (Exception e) {
					throw e;
				}
				resultSet = null;
			}
			routeBusiness = null;
		}
		return routeBusinessList;
	}
}
