package com.nms.util;

import java.io.IOException;
import java.io.InputStream;
import java.io.Reader;
import java.util.Properties;

import org.apache.ibatis.session.SqlSession;
import org.apache.ibatis.session.SqlSessionFactory;
import org.apache.ibatis.session.SqlSessionFactoryBuilder;

import com.ibatis.common.resources.Resources;
import com.nms.db.bean.equipment.shelf.SiteInst;
import com.nms.model.equipment.shlef.SiteService_MB;
import com.nms.model.util.ServiceFactory;
import com.nms.model.util.Services;
import com.nms.ui.manager.ConstantUtil;

/**
 * 初始化Mybatis
 * @author Administrator
 *
 */
public class Mybatis_DBManager {
	
	public static Mybatis_DBManager mybatis_DBManager;
	private static SqlSessionFactory sqlSessionFactory;
	
	public Mybatis_DBManager(String ip) {
		try {
			
			//加载数据库的IP信息
			Properties props = new Properties();
			InputStream propsIs = Mybatis_DBManager.class.getClassLoader().getResourceAsStream("config/config.properties");
			props.load(propsIs);
			props.setProperty("jdbc.url", props.getProperty("jdbc.url").replace("{?}", ip));
			String resource = "conf.xml";
			//加载mybatis 的配置文件（它也加载关联的映射文件）
			Reader reader = Resources.getResourceAsReader(resource);
			//构建sqlSession 的工厂
			sqlSessionFactory = new SqlSessionFactoryBuilder().build(reader,props);
			
		} catch (IOException e) {
			e.printStackTrace();
		}
	}
	
	/**
	 * 初始化
	 * @param ip
	 */
	public static void init(String ip){
		if(mybatis_DBManager == null){
			mybatis_DBManager = new Mybatis_DBManager(ip);
		}
	}
	
	/**
	 * 获取数据库连接
	 * @return
	 */
	public static SqlSession getSqlSession(){
		SqlSession sqlSession = sqlSessionFactory.openSession();
		return sqlSession;
	}
	
	public static void main(String[] args) throws Exception {
		Mybatis_DBManager.init("10.18.1.10");
		ConstantUtil.serviceFactory = new ServiceFactory();
		SiteService_MB siteServiceMB = (SiteService_MB) ConstantUtil.serviceFactory.newService_MB(Services.SITE);
		SiteInst siteInst = siteServiceMB.select(2);
		System.out.println(siteInst.getCellId());
	}
}
