package com.nms.model.alarm;

import java.text.SimpleDateFormat;
import java.util.List;

import org.apache.ibatis.session.SqlSession;
import com.nms.db.bean.alarm.HisAlarmInfo;
import com.nms.db.bean.alarm.WarningLevel;
import com.nms.db.bean.equipment.shelf.SiteInst;
import com.nms.db.dao.alarm.HisAlarmInfoMapper;
import com.nms.model.equipment.shlef.SiteService_MB;
import com.nms.model.util.ObjectService_Mybatis;
import com.nms.model.util.Services;
import com.nms.ui.manager.ConstantUtil;
import com.nms.ui.manager.ResourceUtil;
import com.nms.ui.manager.keys.StringKeysTip;

public class HisAlarmService_MB extends ObjectService_Mybatis {
	private HisAlarmInfoMapper mapper = null;
	
	public void setPtnuser(String ptnuser) {
		super.ptnuser = ptnuser;
	}

	public void setSqlSession(SqlSession sqlSession) {
		super.sqlSession = sqlSession;
	}
	public HisAlarmInfoMapper getMapper() {
		return mapper;
	}
	public void setMapper(HisAlarmInfoMapper mapper) {
		this.mapper = mapper;
	}
	
	
	/**
	 * 插入或者修改历史告警数据
	 * 
	 * @param hisInfo
	 *            历史性能数据实体
	 * @return
	 * @throws Exception
	 */
	public int saveOrUpdate(HisAlarmInfo hisInfo) throws Exception {
		if (hisInfo == null) {
			throw new Exception("taskInfo is null");
		}
		int resultcesId = 0;
		SiteInst siteInst = null;
		WarningLevel warningLevel = null;
		List<WarningLevel> warnList = null;
		SiteService_MB siteService = null;
		WarningLevelService_MB warningLevelService = null;
		try {
			warningLevelService = (WarningLevelService_MB) ConstantUtil.serviceFactory.newService_MB(Services.WarningLevel, this.sqlSession);
			siteService = (SiteService_MB) ConstantUtil.serviceFactory.newService_MB(Services.SITE, this.sqlSession);
			siteInst = new SiteInst();
			siteInst = siteService.select(hisInfo.getSiteId());
			warningLevel = new WarningLevel();
			warningLevel.setWarningcode(hisInfo.getAlarmCode());
			warningLevel.setWarninglevel(hisInfo.getAlarmLevel());
			if (siteInst.getManufacturer()==0) {
				warningLevel.setManufacturer(1); // 1表示武汉
			} else {
				warningLevel.setManufacturer(2); // 2表示晨晓
			}
		
			warnList = warningLevelService.select(warningLevel);
			if(warnList != null && warnList.size() > 0){
				hisInfo.setWarningLevel_temp(warnList.get(0).getWarninglevel_temp());
			}
			
			if (hisInfo.getId() != 0) {
				resultcesId = this.mapper.update(hisInfo);
			} else {
				SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
				if (hisInfo.getRaisedTime() != null ) {
					hisInfo.setHappenedtime(sdf.format(hisInfo.getRaisedTime()));
				}else{
					hisInfo.setHappenedtime("");
				}
				if (hisInfo.getAckTime() != null) {
					hisInfo.setConfirmtime(sdf.format(hisInfo.getAckTime()));
				}else{
					hisInfo.setConfirmtime("");
				}
				if (hisInfo.getClearedTime() != null) {
					hisInfo.setCleanTime(sdf.format(hisInfo.getClearedTime()));
				}else{
					hisInfo.setCleanTime("");
				}
				String isclear = ResourceUtil.srcStr(StringKeysTip.TIP_CLEARED);	
				if(hisInfo.getIsCleared()!=null && hisInfo.getIsCleared().equals(isclear))
				{
					hisInfo.setIsClear(1);
				}
				else
				{
					hisInfo.setIsClear(0);
				}
				hisInfo.setObjectType_db(hisInfo.getObjectType().getValue());			
			    this.mapper.insert(hisInfo);
				resultcesId = hisInfo.getId();

			}
			this.sqlSession.commit();
		} catch (Exception e) {
			throw e;
		} finally {
//			UiUtil.closeService(warningLevelService);
//			UiUtil.closeService(siteService);
		}
		return resultcesId;
	}
}
