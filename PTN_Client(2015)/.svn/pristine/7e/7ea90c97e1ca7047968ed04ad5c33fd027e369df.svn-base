package com.nms.model.ptn;

import java.util.List;

import org.apache.ibatis.session.SqlSession;

import com.nms.db.bean.equipment.shelf.SiteInst;
import com.nms.db.bean.ptn.Businessid;
import com.nms.db.dao.ptn.BusinessidMapper;
import com.nms.model.util.ObjectService_Mybatis;
import com.nms.ui.manager.BusinessIdUtil;
import com.nms.ui.manager.ExceptionManage;
import com.nms.ui.manager.xmlbean.BusinessidXml;

public class BusinessidService_MB extends ObjectService_Mybatis {
	private BusinessidMapper mapper = null;

	public void setPtnuser(String ptnuser) {
		super.ptnuser = ptnuser;
	}

	public void setSession(SqlSession sqlSession) {
		super.sqlSession = sqlSession;
	}

	public BusinessidMapper getMapper() {
		return mapper;
	}

	public void setMapper(BusinessidMapper mapper) {
		this.mapper = mapper;
	}

	/**
	 * 通过网元ID,类型查询可用ID
	 * 
	 * @param siteId
	 * @param type
	 * @return
	 */
	public Businessid select(int siteId, String type, int businessId) {
		Businessid businessid = null;
		try {
			businessid = new Businessid();
			businessid.setSiteId(siteId);
			businessid.setType(type);
			businessid.setId(businessId);
			businessid = this.mapper.query(businessid);
		} catch (Exception e) {
			ExceptionManage.dispose(e, this.getClass());
		}
		return businessid;
	}

	/**
	 * 修改状态
	 * 
	 * @throws Exception
	 */
	public void update(int id, int idStatus) throws Exception {
		Businessid businessid = null;
		try {
			businessid = new Businessid();
			this.mapper.update(businessid);
			this.sqlSession.commit();
		} catch (Exception e) {
			ExceptionManage.dispose(e, this.getClass());
		}
	}

	/**
	 * 批量插入id值
	 * 
	 * @param siteId
	 *            网元id
	 * @param type
	 *            类型（pw,lsp,tunnel,eline）
	 * @param begin
	 *            id起始值
	 * @param end
	 *            id最大值
	 * @throws Exception
	 */
	public void save(SiteInst siteInst) throws Exception {

		List<BusinessidXml> businessidXmlList = null;
		String fileName = null;
		try {
			if (siteInst.getCellType().equals("700D")) {
				fileName = "businessid_700d.xml";
			} else if (siteInst.getCellType().equals("700B")) {
				fileName = "businessid_700b.xml";
			} else if (siteInst.getCellType().equals("710A") || siteInst.getCellType().equals("710") || siteInst.getCellType().equals("CSG T5000")) {
				fileName = "businessid_710.xml";
			} else if (siteInst.getCellType().equals("700E")) {
				fileName = "businessid_20a.xml";
			} else if (siteInst.getCellType().equals("703A")) {
				fileName = "businessid_703.xml";
			} else if (siteInst.getCellType().equals("703B")) {
				fileName = "businessid_703b.xml";
			} else if (siteInst.getCellType().equals("710B")) {
				fileName = "businessid_710b.xml";
			} else if (siteInst.getCellType().equals("703B2")) {
				fileName = "businessid_703b.xml";
			} else if (siteInst.getCellType().equals("703C-1A") || siteInst.getCellType().equals("703C-2A")) {
				fileName = "businessid_703c.xml";
			} else if (siteInst.getCellType().equals("700A")) {
				fileName = "businessid_700a.xml";
			} else if (siteInst.getCellType().equals("700C")) {
				fileName = "businessid_700c.xml";
			} else if (siteInst.getCellType().equals("610A")) {
				fileName = "businessid_610a.xml";
			} else if (siteInst.getCellType().equals("ZXWT CTN280") || siteInst.getCellType().equals("PAS100/200")) {
				fileName = "businessid_710.xml";
			} else if (siteInst.getCellType().equals("ZXWT CTN180") || siteInst.getCellType().equals("IPA500") || siteInst.getCellType().contains("ZXCTN")) {
				fileName = "businessid_703b.xml";
			} else if (siteInst.getCellType().equals("703-1A") || siteInst.getCellType().equals("703-2A") || siteInst.getCellType().equals("703-4A") || siteInst.getCellType().equals("703-1") || siteInst.getCellType().equals("703-2") || siteInst.getCellType().equals("703-3") || siteInst.getCellType().equals("703-4") || siteInst.getCellType().equals("703-5") || siteInst.getCellType().equals("703-6") || siteInst.getCellType().equals("703-7") || siteInst.getCellType().equals("CSG T2000")) {
				fileName = "businessid_703c-4a.xml";
			}
			BusinessIdUtil businessIdUtil = new BusinessIdUtil();
			businessidXmlList = businessIdUtil.getList(fileName);
			for (BusinessidXml businessidXml : businessidXmlList) {
				for (int i = businessidXml.getBegin(); i <= businessidXml.getEnd(); i++) {
					this.mapper.insert(siteInst.getSite_Inst_Id(), businessidXml.getType(), i, 0);
				}
			}
		} catch (Exception e) {
			ExceptionManage.dispose(e, this.getClass());
		} finally {
			businessidXmlList = null;
			fileName = null;
		}
	}
	
	/**
	 * 根据网元ID删除
	 * @param siteId 网元id
	 * @throws Exception
	 */
	public void delete(int siteId) throws Exception{
		try {
			this.mapper.delete(siteId);
		} catch (Exception e) {
			ExceptionManage.dispose(e,this.getClass());
		}
	}
	
}
