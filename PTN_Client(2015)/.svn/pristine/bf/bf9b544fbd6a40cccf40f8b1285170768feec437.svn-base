package com.nms.ui.thread;

import com.nms.db.bean.system.loginlog.LoginLog;
import com.nms.model.system.loginlog.LoginLogServiece;
import com.nms.model.util.Services;
import com.nms.ui.manager.ConstantUtil;
import com.nms.ui.manager.DialogBoxUtil;
import com.nms.ui.manager.ExceptionManage;
import com.nms.ui.manager.ResourceUtil;
import com.nms.ui.manager.UiUtil;
import com.nms.ui.manager.keys.StringKeysTip;

/**
 * 用户注销线程检测
 * 
 * @author kk
 * 
 */
public class UserLogoutThread implements Runnable {

	public UserLogoutThread() {
		Thread.currentThread().setName("UserLogoutThread");
	}

	@Override
	public void run() {
		LoginLogServiece loginLogServiece = null;	//用户日志service
		LoginLog loginLog = null;	//查询条件  根据userid查询
		try {
			loginLogServiece = (LoginLogServiece) ConstantUtil.serviceFactory.newService(Services.LOGINLOGSERVIECE);
			loginLog = new LoginLog();
			loginLog.setUser_id(ConstantUtil.user.getUser_Id());
			loginLog.setLoginTime(ConstantUtil.loginTime);
			
//			synchronized (this) {
				while (true) {
					if (!loginLogServiece.findLoginTime(loginLog)) {
						//记录日志,该用户被注销
//						loginLog.setLogoutState(1);
						loginLogServiece.updateExitLoginLog(loginLog, 1);
						DialogBoxUtil.succeedDialog(null, ResourceUtil.srcStr(StringKeysTip.TIP_USERONLINE_LOGOUT));
						System.exit(0);
					}
					Thread.sleep(5000);
				}
//			}

		} catch (Exception e) {
			ExceptionManage.dispose(e,this.getClass());
		} finally{
			UiUtil.closeService(loginLogServiece);
		}

	}

}
