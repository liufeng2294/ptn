package com.nms.model.ptn.path.protect;

import java.util.List;

import org.apache.ibatis.session.SqlSession;

import com.nms.db.bean.ptn.path.protect.PwProtect;
import com.nms.db.dao.ptn.path.protect.PwProtectMapper;
import com.nms.model.util.ObjectService_Mybatis;
import com.nms.model.util.ServiceFactory;
import com.nms.model.util.Services;
import com.nms.ui.manager.ConstantUtil;
import com.nms.util.DBManager;
import com.nms.util.Mybatis_DBManager;

public class PwProtectService_MB extends ObjectService_Mybatis{
	public void setPtnuser(String ptnuser) {
		super.ptnuser = ptnuser;
	}

	public void setSqlSession(SqlSession sqlSession) {
		super.sqlSession = sqlSession;
	}
	
	private PwProtectMapper PwProtectMapper;

	public PwProtectMapper getPwProtectMapper() {
		return PwProtectMapper;
	}

	public void setPwProtectMapper(PwProtectMapper PwProtectMapper) {
		this.PwProtectMapper = PwProtectMapper;
	}
	
	
	/**
	 * 条件查询
	 * @param pwProtect
	 * @return
	 */
	public List<PwProtect> select(PwProtect pwProtect){
		List<PwProtect> pwProtects = null;
		pwProtects = PwProtectMapper.queryByCondition(pwProtect);
		return pwProtects;
	}
	
	public static void main(String[] args) {
		try {
			DBManager.init("10.18.1.10");
			Mybatis_DBManager.init("10.18.1.10");
			ConstantUtil.serviceFactory = new ServiceFactory();
			PwProtectService_MB protectServiceMB = (PwProtectService_MB) ConstantUtil.serviceFactory.newService_MB(Services.PWPROTECT);
			PwProtect pwProtect = new PwProtect();
			int a = protectServiceMB.getPwProtectMapper().insert(pwProtect);
			System.out.println(a);
			System.out.println(pwProtect.getId());
		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			System.exit(0);
		}
	}
}
