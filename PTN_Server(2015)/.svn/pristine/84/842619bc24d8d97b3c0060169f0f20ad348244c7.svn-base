package com.nms.service.impl.dispatch;

import java.rmi.RemoteException;

import com.nms.db.bean.equipment.port.TdmLoopInfo;
import com.nms.db.enums.EManufacturer;
import com.nms.service.OperationServiceI;
import com.nms.service.impl.base.DispatchBase;
import com.nms.service.impl.dispatch.rmi.DispatchInterface;
import com.nms.service.impl.util.SiteUtil;
import com.nms.service.impl.wh.TdmLoopBackWHServiceImpl;
import com.nms.ui.manager.ExceptionManage;
import com.nms.ui.manager.ResourceUtil;
import com.nms.ui.manager.keys.StringKeysTip;

public class TdmLoopBackDispatch extends DispatchBase implements DispatchInterface {
	public String excuteInsert(Object object) throws Exception {
		int manufacturer = 0;
		OperationServiceI operationServiceI = null;
		String result = ResourceUtil.srcStr(StringKeysTip.TIP_CONFIG_FAIL);
		try {
			if (object == null) {
				throw new Exception("cardInst is null");
			}
			TdmLoopInfo tdm = (TdmLoopInfo) object;
			//虚拟网元操作
			SiteUtil siteUtil = new SiteUtil();
			if(!siteUtil.isNeOnLine(tdm.getSiteId()))
			{
				return ResourceUtil.srcStr(StringKeysTip.TIP_UP_DOWN);
			}
			manufacturer = super.getManufacturer(tdm.getSiteId());
			if (manufacturer == EManufacturer.WUHAN.getValue()) {
				operationServiceI = new TdmLoopBackWHServiceImpl();
			} else {
				// operationServiceI = new AcCXServiceImpl();
			}
			result = operationServiceI.excutionInsert(tdm);
		} catch (Exception e) {
			ExceptionManage.dispose(e,this.getClass());
		}
		return result;
	}

	@Override
	public String excuteDelete(Object object) throws RemoteException, Exception {
		return null;
	}

	@Override
	public String excuteUpdate(Object object) throws RemoteException, Exception {
		return null;
	}

	@Override
	public String synchro(int siteId) throws RemoteException, Exception {
		return null;
	}

	@Override
	public Object consistence(int siteId) throws RemoteException, Exception {
		// TODO Auto-generated method stub
		return null;
	}
}
